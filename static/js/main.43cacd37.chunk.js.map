{"version":3,"sources":["components/Header/Header.module.css","components/UI/Alerts/Alerts.module.css","components/UI/Input/Input.module.css","components/UI/Button/Button.module.css","components/UI/Progress/Progress.module.css","components/UI/Checkbox/Checkbox.module.css","store/reducers/app-reducer.ts","hooks/hooks.ts","api/axios-instance.ts","api/auth-api.ts","store/reducers/auth-reducer.ts","utils/passwordRecoveryMessage.ts","routes/routes.ts","components/UI/Input/Input.tsx","components/UI/Button/Button.tsx","components/UI/Checkbox/Checkbox.tsx","pages/Home/Home.tsx","pages/Profile/Profile.tsx","pages/Registration/Registration.tsx","pages/Login/Login.tsx","pages/PasswordPages/PasswordRecovery/PasswordRecovery.tsx","pages/PasswordPages/NewPassword/NewPassword.tsx","pages/PasswordPages/CheckEmail/CheckEmail.tsx","pages/Error/Error.tsx","components/UI/Progress/Progress.tsx","app/AppRouter.tsx","components/Header/Header.tsx","store/reducers/profile-reducer.ts","store/store.ts","components/UI/Alerts/Alert.tsx","components/UI/Alerts/AlertError/AlertError.tsx","components/UI/Alerts/AlertInfo/AlertInfo.tsx","components/UI/Alerts/Alerts.tsx","app/App.tsx","index.tsx"],"names":["module","exports","APP_ACTIONS_TYPES","useTypedSelector","useSelector","useInput","initialValue","validators","useState","value","setValue","touched","setTouched","onChange","e","currentTarget","onBlur","validation","useValidation","isValid","setIsValid","isRequired","setIsRequired","isEmail","setIsEmail","minLength","setMinLength","maxLength","setMaxLength","useEffect","validator","length","test","String","toLowerCase","instance","axios","create","baseURL","withCredentials","authAPI","payload","post","delete","put","AUTH_ACTIONS_TYPES","initialState","isLoading","isInitialized","error","info","setAppIsLoading","status","type","SET_APP_IS_LOADING","setAppError","SET_APP_ERROR","passwordRecoveryMessage","email","targetLink","PATH","NEW_PASSWORD","from","message","registrationSuccess","isLoggedIn","recoveryEmail","userInfo","setSuccessNewPass","sendSuccessEmail","setRegistrationSuccess","SET_REGISTRATION_SUCCESS","setUsersInfo","SET_USERS_INFO","setIsLoggedIn","SET_IS_LOGGED_IN","setEmailRecovery","SET_EMAIL_RECOVERY","checkAuth","dispatch","a","response","data","SET_APP_INITIALIZED","Input","props","onChangeText","onKeyPress","onEnter","className","spanClassName","restProps","inputClassNames","s","errorInput","spanClassNames","container","key","placeholder","Button","secondary","grouped","classNames","Checkbox","onChangeChecked","children","checkbox","checked","publicRoutes","path","HOME","component","exact","PROFILE","state","auth","name","avatar","publicCardPacksCount","useDispatch","newName","setNewName","newAvatar","setNewAvatar","to","LOGIN","src","alt","style","maxWidth","maxHeight","onClick","updatedUser","REGISTRATION","password","confirmPassword","onSubmit","registrationsData","preventDefault","htmlFor","id","disabled","remember","disabledButton","loginData","rememberMe","PASSWORD_RECOVERY","setEmail","CHECK_EMAIL","successSend","SEND_RECOVERY_EMAIL_SUCCESS","passwordRecovery","NEW_PASSWORD_WITH_TOKEN","token","useParams","successChangePassword","firstPass","setFirstPass","secondPass","setSecondPass","resetPasswordToken","changePassSuccess","SET_SUCCESS_PASSWORD","ERROR","Progress","progressContainer","progressBar","AppRouter","app","map","r","EMPTY","Header","wrapper","activeClassName","active","marginRight","rootReducer","combineReducers","action","SET_APP_INFO","profile","store","createStore","applyMiddleware","thunk","window","Alert","text","open","onClose","isOpen","setIsOpen","closeSnackbar","useCallback","timeoutID","setTimeout","clearTimeout","AlertError","onCloseHandler","AlertInfo","setAppInfo","Alerts","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43cacd37.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__2vAGZ\",\"container\":\"Header_container__236E4\",\"active\":\"Header_active__PRANC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Alerts_wrapper__3iz35\",\"container\":\"Alerts_container__ZWW9s\",\"show\":\"Alerts_show__1kTn9\",\"error\":\"Alerts_error__3qzQq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Input_container__3GYcG\",\"errorInput\":\"Input_errorInput__3GgPO\",\"error\":\"Input_error__2xVl4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__2galI\",\"secondary\":\"Button_secondary__3XSP1\",\"grouped\":\"Button_grouped__3cKo2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progressContainer\":\"Progress_progressContainer__2xQcm\",\"progressBar\":\"Progress_progressBar__15UTX\",\"loading\":\"Progress_loading__22sHP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"Checkbox_checkbox__3lVeK\"};","enum APP_ACTIONS_TYPES {\r\n    SET_APP_IS_LOADING = 'APP/SET_APP_IS_LOADING',\r\n    SET_APP_ERROR = 'APP/SET_APP_ERROR',\r\n    SET_APP_INITIALIZED = 'APP/SET_INITIALIZED',\r\n    SET_APP_INFO = 'APP/SET_APP_INFO',\r\n}\r\n\r\nexport type AppActions =\r\n    | ReturnType<typeof setAppIsLoading>\r\n    | ReturnType<typeof setAppError>\r\n    | ReturnType<typeof setAppInitialized>\r\n    | ReturnType<typeof setAppInfo>\r\n\r\nexport type AppInitialState = {\r\n    isLoading: boolean\r\n    isInitialized: boolean\r\n    error: string\r\n    info: string\r\n}\r\n\r\nconst initialState: AppInitialState = {\r\n    isLoading: false,\r\n    isInitialized: false,\r\n    error: '',\r\n    info: ''\r\n}\r\n\r\nexport const appReducer = (state = initialState, action: AppActions): AppInitialState => {\r\n    switch (action.type) {\r\n        case APP_ACTIONS_TYPES.SET_APP_INITIALIZED:\r\n            return {...state, isInitialized: action.payload.status}\r\n        case APP_ACTIONS_TYPES.SET_APP_IS_LOADING:\r\n            return {...state, isLoading: action.payload.status}\r\n        case APP_ACTIONS_TYPES.SET_APP_ERROR:\r\n            return {...state, error: action.payload.error}\r\n        case APP_ACTIONS_TYPES.SET_APP_INFO:\r\n            return {...state, error: action.payload.info}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAppIsLoading = (status: boolean) => ({\r\n    type: APP_ACTIONS_TYPES.SET_APP_IS_LOADING,\r\n    payload: {status}\r\n} as const)\r\n\r\nexport const setAppError = (error: string) => ({\r\n    type: APP_ACTIONS_TYPES.SET_APP_ERROR,\r\n    payload: {error}\r\n} as const)\r\n\r\nexport const setAppInitialized = (status: boolean) => ({\r\n    type: APP_ACTIONS_TYPES.SET_APP_INITIALIZED,\r\n    payload: {status}\r\n} as const)\r\n\r\nexport const setAppInfo = (info: string) => ({\r\n    type: APP_ACTIONS_TYPES.SET_APP_INFO,\r\n    payload: {info}\r\n} as const)","import {TypedUseSelectorHook, useSelector} from 'react-redux'\r\nimport {RootState} from '../store/store'\r\nimport {ChangeEvent, useEffect, useState} from 'react'\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector\r\n\r\nexport const useInput = (initialValue: string, validators: Validators) => {\r\n    const [value, setValue] = useState(initialValue)\r\n    const [touched, setTouched] = useState(false)\r\n    const validation = useValidation(value, validators)\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => setValue(e.currentTarget.value)\r\n    const onBlur = () => setTouched(true)\r\n\r\n    return {\r\n        value,\r\n        touched,\r\n        onChange,\r\n        onBlur,\r\n        validation\r\n    }\r\n}\r\n\r\ntype Validators = {\r\n    isRequired?: boolean\r\n    minLength?: number\r\n    maxLength?: number\r\n    isEmail?: boolean\r\n}\r\n\r\nexport const useValidation = (value: string, validators: Validators) => {\r\n    const [isValid, setIsValid] = useState(false)\r\n\r\n    const [isRequired, setIsRequired] = useState('')\r\n    const [isEmail, setIsEmail] = useState('')\r\n    const [minLength, setMinLength] = useState('')\r\n    const [maxLength, setMaxLength] = useState('')\r\n\r\n    useEffect(() => {\r\n        for (const validator in validators) {\r\n            switch (validator) {\r\n                case 'isRequired':\r\n                    !value\r\n                        ? setIsRequired('Field is required')\r\n                        : setIsRequired('')\r\n                    break\r\n\r\n                case 'minLength':\r\n                    value.length < validators[validator]!\r\n                        ? setMinLength(`Min length must be more than ${validators[validator]!}`)\r\n                        : setMinLength('')\r\n                    break\r\n\r\n                case 'maxLength':\r\n                    value.length > validators[validator]!\r\n                        ? setMaxLength(`Max length must be less than ${validators[validator]!}`)\r\n                        : setMaxLength('')\r\n                    break\r\n\r\n                case 'isEmail':\r\n                    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n                        .test(String(value).toLowerCase())\r\n                        ? setIsEmail('')\r\n                        : setIsEmail('Wrong email address')\r\n                    break\r\n\r\n            }\r\n        }\r\n    }, [value])\r\n\r\n    useEffect(() => {\r\n        (isRequired || isEmail || minLength || maxLength) ? setIsValid(false) : setIsValid(true)\r\n    }, [validators])\r\n\r\n    return {\r\n        isValid,\r\n        isRequired,\r\n        isEmail,\r\n        minLength,\r\n        maxLength\r\n    }\r\n}","import axios from 'axios'\r\n\r\nexport const developmentMode: boolean = false\r\n\r\nexport const instance = axios.create({\r\n    baseURL: developmentMode ? 'http://localhost:7542/2.0' : 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true\r\n})","import {instance} from './axios-instance'\r\nimport axios, {AxiosResponse} from 'axios'\r\n\r\n// Requests\r\nexport type LoginData = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean\r\n}\r\n\r\nexport type RegistrationsData = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\nexport type ChangeUsersInfoData = {\r\n    name: string\r\n    avatar: string\r\n}\r\n\r\nexport type PasswordRecoveryData = {\r\n    email: string,\r\n    from: string,\r\n    message: string\r\n}\r\n\r\nexport type NewPasswordData = {\r\n    password: string,\r\n    resetPasswordToken: string | undefined\r\n}\r\n\r\n// Responses\r\ntype LogoutResponse = {\r\n    info: string\r\n    error?: string\r\n}\r\n\r\nexport type UsersInfoResponse = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\n\r\ntype UpdateUserResponse = {\r\n    updatedUser: UsersInfoResponse\r\n    error?: string\r\n}\r\n\r\nexport type PasswordResponse = {\r\n    info: string,\r\n    error: string\r\n}\r\n\r\n// API\r\nexport const authAPI = {\r\n    registration: (payload: RegistrationsData) => instance\r\n        .post<RegistrationsData, AxiosResponse<{ error?: string }>>('/auth/register', payload),\r\n\r\n    logout: () => instance\r\n        .delete<LogoutResponse>('/auth/me'),\r\n\r\n    checkAuth: () => instance\r\n        .post<{}, AxiosResponse<UsersInfoResponse>>('/auth/me', {}),\r\n\r\n    changeUsersInfo: (payload: ChangeUsersInfoData) => instance\r\n        .put<ChangeUsersInfoData, AxiosResponse<UpdateUserResponse>>('/auth/me', payload),\r\n\r\n    login: (payload: LoginData) => instance\r\n        .post<LoginData, AxiosResponse<UsersInfoResponse>>(`/auth/login`, payload),\r\n\r\n    passwordRecovery: (payload: PasswordRecoveryData) => axios\r\n        .post<PasswordRecoveryData, AxiosResponse<PasswordResponse>>('https://neko-back.herokuapp.com/2.0/auth/forgot', payload),\r\n\r\n    newPassword: (payload: NewPasswordData) => axios\r\n        .post<NewPasswordData, AxiosResponse<PasswordResponse>>(`https://neko-back.herokuapp.com/2.0/auth/set-new-password`, payload)\r\n}","import {authAPI, ChangeUsersInfoData, LoginData, RegistrationsData, UsersInfoResponse} from '../../api/auth-api'\r\nimport {AppDispatch} from '../store'\r\nimport {setAppError, setAppInitialized, setAppIsLoading} from './app-reducer'\r\nimport {passwordRecoveryMessage} from '../../utils/passwordRecoveryMessage'\r\n\r\nenum AUTH_ACTIONS_TYPES {\r\n    SET_REGISTRATION_SUCCESS = 'AUTH/SET_REGISTRATION_SUCCESS',\r\n    SET_USERS_INFO = 'AUTH/SET_USERS_INFO',\r\n    SET_IS_LOGGED_IN = 'AUTH/SET_IS_LOGGED_IN',\r\n    SET_EMAIL_RECOVERY = 'AUTH/SET_EMAIL_RECOVERY',\r\n    SET_SUCCESS_PASSWORD = 'AUTH/SET_SUCCESS_PASSWORD',\r\n    SEND_RECOVERY_EMAIL_SUCCESS = 'AUTH/SEND_RECOVERY_EMAIL_SUCCESS',\r\n}\r\n\r\nexport type AuthActions =\r\n    | ReturnType<typeof setRegistrationSuccess>\r\n    | ReturnType<typeof setUsersInfo>\r\n    | ReturnType<typeof setIsLoggedIn>\r\n    | ReturnType<typeof setEmailRecovery>\r\n    | ReturnType<typeof setSuccessPassword>\r\n    | ReturnType<typeof setSendEmailSuccess>\r\n\r\nexport type AuthInitialState = {\r\n    registrationSuccess: boolean\r\n    isLoggedIn: boolean\r\n    recoveryEmail: string\r\n    userInfo: UsersInfoResponse\r\n    setSuccessNewPass: boolean\r\n    sendSuccessEmail: boolean\r\n}\r\n\r\nconst initialState: AuthInitialState = {\r\n    registrationSuccess: false,\r\n    isLoggedIn: false,\r\n    recoveryEmail: '',\r\n    userInfo: {} as UsersInfoResponse,\r\n    setSuccessNewPass: false,\r\n    sendSuccessEmail: false,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action: AuthActions): AuthInitialState => {\r\n    switch (action.type) {\r\n        case AUTH_ACTIONS_TYPES.SET_REGISTRATION_SUCCESS:\r\n            return {...state, registrationSuccess: action.payload.status}\r\n\r\n        case AUTH_ACTIONS_TYPES.SET_USERS_INFO:\r\n            return {...state, userInfo: action.payload}\r\n\r\n        case AUTH_ACTIONS_TYPES.SET_IS_LOGGED_IN:\r\n            return {...state, isLoggedIn: action.payload.status}\r\n\r\n        case AUTH_ACTIONS_TYPES.SET_EMAIL_RECOVERY:\r\n            return {...state, recoveryEmail: action.payload.email}\r\n\r\n        case AUTH_ACTIONS_TYPES.SET_SUCCESS_PASSWORD:\r\n            return {...state, setSuccessNewPass: action.payload.changePassSuccess}\r\n\r\n        case AUTH_ACTIONS_TYPES.SEND_RECOVERY_EMAIL_SUCCESS:\r\n            return {...state, sendSuccessEmail: action.payload.successSend}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setRegistrationSuccess = (status: boolean) => ({\r\n    type: AUTH_ACTIONS_TYPES.SET_REGISTRATION_SUCCESS,\r\n    payload: {status}\r\n} as const)\r\n\r\nexport const setUsersInfo = (info: UsersInfoResponse) => ({\r\n    type: AUTH_ACTIONS_TYPES.SET_USERS_INFO,\r\n    payload: info\r\n} as const)\r\n\r\nexport const setIsLoggedIn = (status: boolean) => ({\r\n    type: AUTH_ACTIONS_TYPES.SET_IS_LOGGED_IN,\r\n    payload: {status}\r\n} as const)\r\n\r\nexport const setEmailRecovery = (email: string) => ({\r\n    type: AUTH_ACTIONS_TYPES.SET_EMAIL_RECOVERY,\r\n    payload: {email}\r\n} as const)\r\n\r\nexport const setSuccessPassword = (changePassSuccess: boolean) => ({\r\n    type: AUTH_ACTIONS_TYPES.SET_SUCCESS_PASSWORD,\r\n    payload: {changePassSuccess}\r\n} as const)\r\n\r\nexport const setSendEmailSuccess = (successSend: boolean) => ({\r\n    type: AUTH_ACTIONS_TYPES.SEND_RECOVERY_EMAIL_SUCCESS,\r\n    payload: {successSend}\r\n} as const)\r\n\r\nexport const registration = (registrationsData: RegistrationsData) => async (dispatch: AppDispatch) => {\r\n    try {\r\n        dispatch(setAppIsLoading(true))\r\n        await authAPI.registration(registrationsData)\r\n        dispatch(setRegistrationSuccess(true))\r\n    } catch (e: any) {\r\n        const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n        dispatch(setAppError(error))\r\n    } finally {\r\n        dispatch(setRegistrationSuccess(false))\r\n        dispatch(setAppIsLoading(false))\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch: AppDispatch) => {\r\n    try {\r\n        dispatch(setAppIsLoading(true))\r\n        await authAPI.logout()\r\n        dispatch(setUsersInfo({} as UsersInfoResponse))\r\n        dispatch(setIsLoggedIn(false))\r\n    } catch (e: any) {\r\n        const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n        dispatch(setAppError(error))\r\n    } finally {\r\n        dispatch(setAppIsLoading(false))\r\n    }\r\n}\r\n\r\nexport const checkAuth = () => async (dispatch: AppDispatch) => {\r\n    try {\r\n        dispatch(setAppIsLoading(true))\r\n        const response = await authAPI.checkAuth()\r\n        dispatch(setUsersInfo(response.data))\r\n        dispatch(setIsLoggedIn(true))\r\n    } catch (e: any) {\r\n        const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n        dispatch(setAppError(error))\r\n    } finally {\r\n        dispatch(setAppIsLoading(false))\r\n        dispatch(setAppInitialized(true))\r\n    }\r\n}\r\n\r\nexport const changeUsersInfo = (info: ChangeUsersInfoData) => async (dispatch: AppDispatch) => {\r\n    try {\r\n        dispatch(setAppIsLoading(true))\r\n        const response = await authAPI.changeUsersInfo(info)\r\n        dispatch(setUsersInfo(response.data.updatedUser))\r\n    } catch (e: any) {\r\n        const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n        dispatch(setAppError(error))\r\n    } finally {\r\n        dispatch(setAppIsLoading(false))\r\n    }\r\n}\r\n\r\nexport const login = (loginData: LoginData) => async (dispatch: AppDispatch) => {\r\n    try {\r\n        dispatch(setAppIsLoading(true))\r\n        const response = await authAPI.login(loginData)\r\n        dispatch(setUsersInfo(response.data))\r\n        dispatch(setIsLoggedIn(true))\r\n    } catch (e: any) {\r\n        const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n        dispatch(setAppError(error))\r\n    } finally {\r\n        dispatch(setAppIsLoading(false))\r\n\r\n    }\r\n}\r\n\r\nexport const passwordRecovery = (email: string) => async (dispatch: AppDispatch) => {\r\n    try {\r\n        dispatch(setAppIsLoading(true))\r\n        await authAPI.passwordRecovery(passwordRecoveryMessage(email))\r\n        dispatch(setSendEmailSuccess(true))\r\n        dispatch(setEmailRecovery(email))\r\n    } catch (e: any) {\r\n        const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n        dispatch(setAppError(error))\r\n    } finally {\r\n        dispatch(setAppIsLoading(false))\r\n    }\r\n}\r\n\r\nexport const newPassword = (password: string, resetPasswordToken: string) => async (dispatch: AppDispatch) => {\r\n    try {\r\n        dispatch(setAppIsLoading(true))\r\n        const response = await authAPI.newPassword({password, resetPasswordToken})\r\n        if (response.status === 200) {\r\n            dispatch(setSuccessPassword(true))\r\n        }\r\n    } catch (e: any) {\r\n        const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n        dispatch(setAppError(error))\r\n    } finally {\r\n        dispatch(setAppIsLoading(false))\r\n    }\r\n}","import {PATH} from '../routes/routes'\r\nimport {PasswordRecoveryData} from '../api/auth-api'\r\nimport {developmentMode} from '../api/axios-instance'\r\n\r\nexport const passwordRecoveryMessage = (email: string) => {\r\n    const targetLink = developmentMode\r\n        ? `http://localhost:3000/cards-react/#${PATH.NEW_PASSWORD}/$token$`\r\n        : `https://aportraitofjoyce.github.io/cards-react/#${PATH.NEW_PASSWORD}/$token$`\r\n\r\n    const payload: PasswordRecoveryData = {\r\n        email,\r\n        from: 'test-front-admin, <cards@gmail.com>',\r\n        message: `<div style='background-color: #ffb700; padding: 16px'>Password recovery link: <a href='${targetLink}'>link</a></div>`\r\n    }\r\n\r\n    return payload\r\n}\r\n","import {FC} from 'react'\r\nimport {Profile} from '../pages/Profile/Profile'\r\nimport {Login} from '../pages/Login/Login'\r\nimport {Registration} from '../pages/Registration/Registration'\r\nimport {Error} from '../pages/Error/Error'\r\nimport {PasswordRecovery} from '../pages/PasswordPages/PasswordRecovery/PasswordRecovery'\r\nimport {NewPassword} from '../pages/PasswordPages/NewPassword/NewPassword'\r\nimport {CheckEmail} from '../pages/PasswordPages/CheckEmail/CheckEmail'\r\nimport {Home} from '../pages/Home/Home'\r\n\r\nexport enum PATH {\r\n    HOME = '/',\r\n    EMPTY = '',\r\n    ERROR = '/404',\r\n    PROFILE = '/profile',\r\n    LOGIN = '/login',\r\n    REGISTRATION = '/registration',\r\n    PASSWORD_RECOVERY = '/password-recovery',\r\n    NEW_PASSWORD = '/new-password',\r\n    NEW_PASSWORD_WITH_TOKEN = '/new-password/:token?',\r\n    CHECK_EMAIL = '/check-email',\r\n}\r\n\r\ntype Routes = {\r\n    path: string,\r\n    component: FC\r\n    exact?: boolean\r\n}\r\n\r\nexport const publicRoutes: Routes[] = [\r\n    {path: PATH.HOME, component: Home, exact: true},\r\n    {path: PATH.PROFILE, component: Profile},\r\n    {path: PATH.REGISTRATION, component: Registration},\r\n    {path: PATH.LOGIN, component: Login},\r\n    {path: PATH.PASSWORD_RECOVERY, component: PasswordRecovery},\r\n    {path: PATH.NEW_PASSWORD_WITH_TOKEN, component: NewPassword},\r\n    {path: PATH.CHECK_EMAIL, component: CheckEmail},\r\n    {path: PATH.ERROR, component: Error},\r\n]","import React, {ChangeEvent, DetailedHTMLProps, FC, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './Input.module.css'\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype InputTextProps = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nexport const Input: FC<InputTextProps> = props => {\r\n    const {\r\n        type,\r\n        onChange,\r\n        onChangeText,\r\n        onKeyPress,\r\n        onEnter,\r\n        error,\r\n        className,\r\n        spanClassName,\r\n        ...restProps\r\n    } = props\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e)\r\n        onEnter && e.key === 'Enter' && onEnter()\r\n    }\r\n\r\n    const inputClassNames = `${error ? s.errorInput : ''}${className ? className : ''}`\r\n    const spanClassNames = `${s.error}${spanClassName ? spanClassName : ''}`\r\n\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <input type={type || 'text'}\r\n                   onChange={onChangeCallback}\r\n                   onKeyPress={onKeyPressCallback}\r\n                   className={inputClassNames}\r\n                   placeholder={'Введите текст...'}\r\n                   {...restProps}/>\r\n            {error && <span className={spanClassNames}>{error}</span>}\r\n        </div>\r\n    )\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps, FC} from 'react'\r\nimport s from './Button.module.css'\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype ButtonProps = DefaultButtonPropsType & {\r\n    secondary?: boolean\r\n    grouped?: boolean\r\n}\r\n\r\nexport const Button: FC<ButtonProps> = props => {\r\n    const {secondary, className, grouped, ...restProps} = props\r\n    const classNames = `${secondary ? s.secondary : ''}${grouped ? s.grouped : ''}${className ? className : ''}`\r\n\r\n    return <button className={classNames} {...restProps}/>\r\n}","import React, {ChangeEvent, DetailedHTMLProps, FC, InputHTMLAttributes} from 'react'\r\nimport s from './Checkbox.module.css'\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype CheckboxProps = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nexport const Checkbox: FC<CheckboxProps> = props => {\r\n    const {\r\n        type,\r\n        onChange,\r\n        onChangeChecked,\r\n        className,\r\n        spanClassName,\r\n        children,\r\n        ...restProps\r\n    } = props\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const classNames = `${s.checkbox}${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input type={'checkbox'}\r\n                   onChange={onChangeCallback}\r\n                   className={classNames}\r\n                   {...restProps}/>\r\n            {children && <span>{children}</span>}\r\n        </label>\r\n    )\r\n}","import React, {FC} from 'react'\r\n\r\nexport const Home: FC = () => {\r\n    return (\r\n        <div>\r\n            <h1>Home Page</h1>\r\n        </div>\r\n    )\r\n}","import React, {FC, useEffect, useState} from 'react'\r\nimport {useTypedSelector} from '../../hooks/hooks'\r\nimport {useDispatch} from 'react-redux'\r\nimport {changeUsersInfo, checkAuth} from '../../store/reducers/auth-reducer'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {PATH} from '../../routes/routes'\r\n\r\nexport const Profile: FC = () => {\r\n    const isLoggedIn = useTypedSelector(state => state.auth.isLoggedIn)\r\n    const {name, avatar, publicCardPacksCount} = useTypedSelector(state => state.auth.userInfo)\r\n    const dispatch = useDispatch()\r\n\r\n    const [newName, setNewName] = useState('')\r\n    const [newAvatar, setNewAvatar] = useState('')\r\n\r\n    useEffect(() => {\r\n        dispatch(checkAuth())\r\n    }, [dispatch])\r\n\r\n    if (!isLoggedIn) return <Redirect to={PATH.LOGIN}/>\r\n\r\n    const onSubmitHandler = () => {\r\n        dispatch(changeUsersInfo({name: newName, avatar: newAvatar}))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Profile</h1>\r\n            <div>\r\n                <img src={avatar}\r\n                     alt={name}\r\n                     style={{maxWidth: 400, maxHeight: 400}}/>\r\n                <div>{name}</div>\r\n                <div>{publicCardPacksCount}</div>\r\n\r\n                <div>\r\n                    <input type='text' placeholder={'New Name'} value={newName}\r\n                           onChange={e => setNewName(e.currentTarget.value)}/>\r\n\r\n                    <input type='text' placeholder={'New Avatar URL'} value={newAvatar}\r\n                           onChange={e => setNewAvatar(e.currentTarget.value)}/>\r\n                    <button onClick={onSubmitHandler}>Change info</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {FC, FormEvent} from 'react'\r\nimport {Input} from '../../components/UI/Input/Input'\r\nimport {Button} from '../../components/UI/Button/Button'\r\nimport {useInput, useTypedSelector} from '../../hooks/hooks'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {PATH} from '../../routes/routes'\r\nimport {useDispatch} from 'react-redux'\r\nimport {registration} from '../../store/reducers/auth-reducer'\r\nimport {setAppError} from '../../store/reducers/app-reducer'\r\n\r\nexport const Registration: FC = () => {\r\n    const {registrationSuccess} = useTypedSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n\r\n    const email = useInput('', {isRequired: true, isEmail: true})\r\n    const password = useInput('', {minLength: 7, maxLength: 25})\r\n    const confirmPassword = useInput('', {minLength: 7, maxLength: 25})\r\n\r\n    const onSubmit = (e: FormEvent) => {\r\n        e.preventDefault()\r\n        password.value === confirmPassword.value\r\n            ? dispatch(registration({email: email.value, password: password.value}))\r\n            : dispatch(setAppError('PASSWORDS!'))\r\n    }\r\n\r\n    if (registrationSuccess) return <Redirect to={PATH.LOGIN}/>\r\n\r\n    return (\r\n        <div>\r\n            <h1>Registration</h1>\r\n\r\n            <form onSubmit={onSubmit}>\r\n                <label htmlFor={'registration-email'}>Email\r\n                    <Input id={'registration-email'}\r\n                           type={'email'}\r\n                           placeholder={'Enter you email address...'}\r\n                           {...email}/>\r\n                </label>\r\n\r\n                {(email.touched && email.validation) &&\r\n\t\t\t\t<span>{email.validation.isRequired || email.validation.isEmail}</span>}\r\n\r\n                <label htmlFor={'registration-password'}>Password\r\n                    <Input id={'registration-password'}\r\n                           type={'text'}\r\n                           placeholder={'Enter your password...'}\r\n                           {...password}/>\r\n                </label>\r\n\r\n                {(password.touched && password.validation) &&\r\n\t\t\t\t<span>{password.validation.minLength || password.validation.maxLength}</span>}\r\n\r\n\r\n                <label htmlFor={'registration-confirm-password'}>Confirm Password\r\n                    <Input id={'registration-confirm-password'}\r\n                           type={'text'}\r\n                           placeholder={'Confirm your password...'}\r\n                           {...confirmPassword}/>\r\n                </label>\r\n\r\n                {(confirmPassword.touched && confirmPassword.validation) &&\r\n\t\t\t\t<span>{confirmPassword.validation.minLength || confirmPassword.validation.maxLength}</span>}\r\n\r\n                <Button type={'submit'}\r\n                        disabled={!email.validation.isValid || !password.validation.isValid || !confirmPassword.validation.isValid}>\r\n                    Register\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, {FC, FormEvent} from 'react'\r\nimport {Input} from '../../components/UI/Input/Input'\r\nimport {Button} from '../../components/UI/Button/Button'\r\nimport {Checkbox} from '../../components/UI/Checkbox/Checkbox'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport {PATH} from '../../routes/routes'\r\nimport {useDispatch} from 'react-redux'\r\nimport {useInput, useTypedSelector} from '../../hooks/hooks'\r\nimport {login} from '../../store/reducers/auth-reducer'\r\n\r\nexport const Login: FC = () => {\r\n    const isLoggedIn = useTypedSelector(state => state.auth.isLoggedIn)\r\n    const dispatch = useDispatch()\r\n    const email = useInput('', {isEmail: true})\r\n    const password = useInput('', {minLength: 7, maxLength: 25})\r\n    const remember = useInput('', {})\r\n\r\n    const onSubmit = (e: FormEvent) => {\r\n        e.preventDefault()\r\n        dispatch(login({email: email.value, password: password.value, rememberMe: true}))\r\n    }\r\n\r\n    const disabledButton = !email.validation.isValid && !password.validation.isValid\r\n\r\n    if (isLoggedIn) return <Redirect to={PATH.PROFILE}/>\r\n\r\n    return (\r\n        <div>\r\n            <h1>Sign In</h1>\r\n\r\n            <form onSubmit={onSubmit}>\r\n                <label htmlFor='loginEmail'>\r\n                    Email\r\n                    <Input id={'loginEmail'}\r\n                           type={'email'}\r\n                           placeholder={'Enter your email address'}\r\n                           {...email}/>\r\n                </label>\r\n\r\n                <label htmlFor='loginPassword'>\r\n                    Password\r\n                    <Input id={'loginPassword'}\r\n                           type={'password'}\r\n                           placeholder={'Enter your password'}\r\n                           {...password}/>\r\n                </label>\r\n\r\n                <Link to={PATH.PASSWORD_RECOVERY}><h4>Forgot Password</h4></Link>\r\n\r\n                <Checkbox{...remember}>Remember me</Checkbox>\r\n\r\n                <Button type={'submit'} disabled={disabledButton}>Login</Button>\r\n\r\n                <div>\r\n                    <p>Don’t have an account?</p>\r\n                    <Link to={PATH.REGISTRATION}><h4>Sign Up</h4></Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, {FC, useState} from 'react'\r\nimport {Button} from '../../../components/UI/Button/Button'\r\nimport {Input} from '../../../components/UI/Input/Input'\r\nimport {useDispatch} from 'react-redux'\r\nimport {passwordRecovery} from '../../../store/reducers/auth-reducer'\r\nimport {useTypedSelector} from '../../../hooks/hooks'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {PATH} from '../../../routes/routes'\r\n\r\nexport const PasswordRecovery: FC = () => {\r\n    const sendSuccessEmail = useTypedSelector(state => state.auth.sendSuccessEmail)\r\n    const [email, setEmail] = useState<string>('')\r\n    const dispatch = useDispatch()\r\n\r\n    const onsubmit = () => {\r\n        dispatch(passwordRecovery(email))\r\n    }\r\n\r\n    if (sendSuccessEmail) return <Redirect to={PATH.CHECK_EMAIL}/>\r\n\r\n    return (\r\n        <div>\r\n            <h1>Forgot your password?</h1>\r\n            <form onSubmit={onsubmit}>\r\n                <label htmlFor={'password-recovery-email'}>\r\n                    Email\r\n                    <Input type={'email'}\r\n                           id={'password-recovery-email'}\r\n                           placeholder={'enter your email'}\r\n                           value={email}\r\n                           onChange={(e) => setEmail(e.currentTarget.value)}/>\r\n                </label>\r\n\r\n                <div>Enter your address and we will send you further instructions</div>\r\n                <Button>Send instructions</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, {FC, FormEvent, useState} from 'react'\r\nimport {Button} from '../../../components/UI/Button/Button'\r\nimport {Input} from '../../../components/UI/Input/Input'\r\nimport {Redirect, useParams} from 'react-router-dom'\r\nimport {useDispatch} from 'react-redux'\r\nimport {newPassword} from '../../../store/reducers/auth-reducer'\r\nimport {useTypedSelector} from '../../../hooks/hooks'\r\nimport {PATH} from '../../../routes/routes'\r\n\r\nexport const NewPassword: FC = () => {\r\n    const dispatch = useDispatch()\r\n    const {token} = useParams<{ token: string }>()\r\n    const successChangePassword = useTypedSelector(state => state.auth.setSuccessNewPass)\r\n\r\n    const [firstPass, setFirstPass] = useState<string>('')\r\n    const [secondPass, setSecondPass] = useState<string>('')\r\n\r\n    const onSubmit = (e: FormEvent) => {\r\n        e.preventDefault()\r\n        firstPass === secondPass && dispatch(newPassword(firstPass, token))\r\n    }\r\n\r\n    if (successChangePassword) return <Redirect to={PATH.LOGIN}/>\r\n\r\n    return (\r\n        <div>\r\n            <h1>Create new password</h1>\r\n            <form onSubmit={onSubmit}>\r\n                <label htmlFor='inputNewPassword'>\r\n                    New Password\r\n                    <Input\r\n                        id={'inputNewPassword'}\r\n                        type={'text'}\r\n                        onChange={(e) => setFirstPass(e.currentTarget.value)}\r\n                        value={firstPass}\r\n                        placeholder={'New password'}/>\r\n                </label>\r\n\r\n                <label htmlFor='RepeatNewPassword'>\r\n                    Repeat New Password\r\n                    <Input\r\n                        id={'RepeatNewPassword'}\r\n                        type={'text'}\r\n                        onChange={(e) => setSecondPass(e.currentTarget.value)}\r\n                        value={secondPass}\r\n                        placeholder={'Repeat new password'}/>\r\n                </label>\r\n\r\n                <Button type={'submit'}>Create new password</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useTypedSelector} from '../../../hooks/hooks'\r\n\r\nexport const CheckEmail = () => {\r\n    const {recoveryEmail} = useTypedSelector(state => state.auth)\r\n\r\n    return (\r\n        <div>\r\n            <h1>Check Email</h1>\r\n            <img src='https://su-19.ru/wp-content/uploads/2020/12/mail_ico.png'\r\n                 alt='iconMail'/>\r\n            <h3>We've sent an Email with instructions to {recoveryEmail}</h3>\r\n        </div>\r\n    )\r\n}","import React, {FC} from 'react'\r\n\r\nexport const Error: FC = () => {\r\n    return (\r\n        <div>\r\n            <h1>Error 404</h1>\r\n        </div>\r\n    )\r\n}","import React, {FC} from 'react'\r\nimport s from './Progress.module.css'\r\n\r\nexport const Progress: FC = () => {\r\n    return (\r\n        <div>\r\n            <div className={s.progressContainer}>\r\n                <div className={s.progressBar}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {FC, useEffect} from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport {PATH, publicRoutes} from '../routes/routes'\r\nimport {useTypedSelector} from '../hooks/hooks'\r\nimport {Progress} from '../components/UI/Progress/Progress'\r\nimport {useDispatch} from 'react-redux'\r\nimport {checkAuth} from '../store/reducers/auth-reducer'\r\n\r\nexport const AppRouter: FC = () => {\r\n    const {isLoading, isInitialized} = useTypedSelector(state => state.app)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(checkAuth())\r\n    }, [])\r\n\r\n    if (!isInitialized) return <Progress/>\r\n\r\n    return (\r\n        <>\r\n            {isLoading && <Progress/>}\r\n            <Switch>\r\n                {publicRoutes.map(r => <Route key={r.path} path={r.path} component={r.component} exact={r.exact}/>)}\r\n                <Redirect from={PATH.EMPTY} to={PATH.ERROR}/>\r\n            </Switch>\r\n        </>\r\n    )\r\n}","import React, {FC} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {PATH} from '../../routes/routes'\r\nimport s from './Header.module.css'\r\nimport {useDispatch} from 'react-redux'\r\nimport {logout} from '../../store/reducers/auth-reducer'\r\nimport {useTypedSelector} from '../../hooks/hooks'\r\n\r\nexport const Header: FC = () => {\r\n    const isLoggedIn = useTypedSelector(state => state.auth.isLoggedIn)\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <nav className={s.container}>\r\n                <NavLink activeClassName={s.active} to={PATH.HOME} exact>Home</NavLink>\r\n                <NavLink activeClassName={s.active} to={PATH.PROFILE} style={{marginRight: 64}}>Profile</NavLink>\r\n                <NavLink activeClassName={s.active} to={PATH.REGISTRATION}>Registration</NavLink>\r\n                {!isLoggedIn && <NavLink activeClassName={s.active} to={PATH.LOGIN}>Login</NavLink>}\r\n                <NavLink activeClassName={s.active} to={PATH.PASSWORD_RECOVERY}>Password Recovery</NavLink>\r\n                <NavLink activeClassName={s.active} to={PATH.CHECK_EMAIL}>Check email</NavLink>\r\n                <NavLink activeClassName={s.active} to={PATH.NEW_PASSWORD}>New Password</NavLink>\r\n                {isLoggedIn && <span onClick={logoutHandler}>Logout</span>}\r\n            </nav>\r\n        </div>\r\n    )\r\n}","const initialState = {}\r\n\r\nexport const profileReducer = (state = initialState, action: any): typeof initialState => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {profileReducer} from './reducers/profile-reducer'\r\nimport {authReducer} from './reducers/auth-reducer'\r\nimport {appReducer} from './reducers/app-reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    auth: authReducer,\r\n    profile: profileReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React, {FC, useCallback, useEffect, useState} from 'react'\r\nimport s from './Alerts.module.css'\r\n\r\ntype AlertProps = {\r\n    type: 'error' | 'success'\r\n    text: string | null\r\n    open: boolean\r\n    onClose: () => void\r\n}\r\n\r\nexport const Alert: FC<AlertProps> = props => {\r\n    const {type, text, open, onClose} = props\r\n    const [isOpen, setIsOpen] = useState<boolean>(open)\r\n\r\n    const closeSnackbar = useCallback(() => {\r\n        setIsOpen(false)\r\n        onClose()\r\n    }, [onClose])\r\n\r\n    useEffect(() => {\r\n        setIsOpen(open)\r\n        const timeoutID = setTimeout(() => {\r\n            closeSnackbar()\r\n        }, 5000)\r\n\r\n        return () => clearTimeout(timeoutID)\r\n    }, [closeSnackbar, open])\r\n\r\n    return (\r\n        <>\r\n            {isOpen &&\r\n\t\t\t<div className={`${s.container} ${type === 'error' && s.error}`}>\r\n\t\t\t\t<div>{text ? text : 'I am Alert'}</div>\r\n\t\t\t\t<span onClick={closeSnackbar}>X</span>\r\n\t\t\t</div>}\r\n        </>\r\n    )\r\n}","import React, {FC, useCallback} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {useTypedSelector} from '../../../../hooks/hooks'\r\nimport {setAppError} from '../../../../store/reducers/app-reducer'\r\nimport {Alert} from '../Alert'\r\n\r\nexport const AlertError: FC = () => {\r\n    const error = useTypedSelector(state => state.app.error)\r\n    const dispatch = useDispatch()\r\n\r\n    const onCloseHandler = useCallback(() => {\r\n        dispatch(setAppError(''))\r\n    }, [dispatch])\r\n\r\n    return <Alert type={'error'} text={error} open={!!error} onClose={onCloseHandler}/>\r\n}","import React, {FC, useCallback} from 'react'\r\nimport {useTypedSelector} from '../../../../hooks/hooks'\r\nimport {useDispatch} from 'react-redux'\r\nimport {setAppInfo} from '../../../../store/reducers/app-reducer'\r\nimport {Alert} from '../Alert'\r\n\r\nexport const AlertInfo: FC = () => {\r\n    const info = useTypedSelector(state => state.app.info)\r\n    const dispatch = useDispatch()\r\n\r\n    const onCloseHandler = useCallback(() => {\r\n        dispatch(setAppInfo(''))\r\n    }, [dispatch])\r\n\r\n    return <Alert type={'success'} text={info} open={!!info} onClose={onCloseHandler}/>\r\n}","import React, {FC} from 'react'\r\nimport s from './Alerts.module.css'\r\nimport {AlertError} from './AlertError/AlertError'\r\nimport {AlertInfo} from './AlertInfo/AlertInfo'\r\n\r\nexport const Alerts: FC = () => {\r\n    return (\r\n        <div>\r\n            <div className={s.wrapper}>\r\n                <AlertError/>\r\n                <AlertInfo/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {FC} from 'react'\r\nimport {AppRouter} from './AppRouter'\r\nimport {HashRouter} from 'react-router-dom'\r\nimport {Header} from '../components/Header/Header'\r\nimport {Provider} from 'react-redux'\r\nimport {store} from '../store/store'\r\nimport {Alerts} from '../components/UI/Alerts/Alerts'\r\n\r\nexport const App: FC = () => {\r\n    return (\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <Alerts/>\r\n                <Header/>\r\n                <AppRouter/>\r\n            </Provider>\r\n        </HashRouter>\r\n    )\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport {App} from './app/App'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n                <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}