{"version":3,"sources":["store/reducers/app-reducer.ts","hooks/hooks.ts","api/axios-instance.ts","api/auth-api.ts","store/reducers/auth-reducer.ts","utils/passwordRecoveryMessage.ts","utils/errors.ts","store/reducers/cards-reducer.ts","components/Icons/EyeIcon.tsx","components/UI/Input/Input.tsx","components/UI/Button/Button.tsx","components/UI/Checkbox/Checkbox.tsx","api/cards-api.ts","store/reducers/packs-reducer.ts","components/UI/Table/Table.tsx","components/UI/Pagination/Pagination.tsx","components/UI/Select/Select.tsx","api/packs-api.ts","routes/routes.ts","pages/Home/Home.tsx","pages/Profile/Profile.tsx","pages/Registration/Registration.tsx","pages/Login/Login.tsx","pages/PasswordPages/PasswordRecovery/PasswordRecovery.tsx","pages/PasswordPages/NewPassword/NewPassword.tsx","pages/PasswordPages/CheckEmail/CheckEmail.tsx","pages/Packs/Packs.tsx","pages/Packs/packsModel.tsx","pages/Cards/Cards.tsx","pages/Cards/cardsModel.tsx","pages/Error/Error.tsx","components/UI/Progress/Progress.tsx","app/AppRouter.tsx","components/Icons/ReactIcon.tsx","components/Header/Header.tsx","store/store.ts","components/UI/Alerts/Alert.tsx","components/UI/Alerts/AlertError/AlertError.tsx","components/UI/Alerts/AlertInfo/AlertInfo.tsx","components/UI/Alerts/Alerts.tsx","app/App.tsx","index.tsx","components/UI/Pagination/Pagination.module.css","components/Header/Header.module.css","components/UI/Input/Input.module.css","components/UI/Alerts/Alerts.module.css","components/UI/Table/Table.module.css","components/UI/Button/Button.module.css","components/UI/Checkbox/Checkbox.module.css","components/UI/Progress/Progress.module.css","pages/PasswordPages/PasswordPages.module.css","components/UI/Select/Select.module.css"],"names":["APP_ACTIONS_TYPES","useTypedSelector","useSelector","instance","axios","create","baseURL","withCredentials","authAPI","payload","post","delete","put","AUTH_ACTIONS_TYPES","initialState","isLoading","isInitialized","error","info","setAppIsLoading","status","type","SET_APP_IS_LOADING","setAppError","SET_APP_ERROR","setAppInfo","SET_APP_INFO","passwordRecoveryMessage","email","targetLink","PATH","NEW_PASSWORD","from","message","errorsHandler","dispatch","response","data","CARDS_ACTIONS_TYPES","registrationSuccess","isLoggedIn","recoveryEmail","userInfo","setSuccessNewPass","sendSuccessEmail","setRegistrationSuccess","SET_REGISTRATION_SUCCESS","setUsersInfo","SET_USERS_INFO","setIsLoggedIn","SET_IS_LOGGED_IN","setEmailRecovery","SET_EMAIL_RECOVERY","setSendEmailSuccess","successSend","SEND_RECOVERY_EMAIL_SUCCESS","checkAuth","a","SET_APP_INITIALIZED","EyeIcon","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","className","d","cx","cy","r","Input","props","onChange","onChangeText","onKeyPress","onEnter","spanClassName","password","restProps","useState","isPassword","setIsPassword","inputClassNames","s","input","errorInput","spanClassNames","container","e","currentTarget","value","key","placeholder","eye","onClick","Button","state","app","secondary","grouped","classNames","disabled","Checkbox","onChangeChecked","children","checkbox","label","checked","cardsAPI","get","params","PACKS_ACTIONS_TYPES","cards","page","pageCount","cardsTotalCount","packUserId","minGrade","maxGrade","currentCardsPackID","setCards","SET_CARDS","setCardsCurrentPage","SET_CARDS_CURRENT_PAGE","setCardsCountOnPage","SET_CARDS_COUNT_ON_PAGE","setCardsTotalCount","SET_CARDS_TOTAL_COUNT","fetchCards","getState","cardsPack_id","min","max","cardQuestion","undefined","cardAnswer","count","Table","model","header","map","m","index","title","body","dataItem","dataIndex","row","render","_id","Pagination","totalCount","countPerPage","currentPage","onChangePage","acc","visPre","setVisPre","visNext","setVisNext","pageNumbers","Math","ceil","pages","i","push","previousPage","nextPage","pageNextAcc","pagePreviousAcc","useEffect","isNaN","wrapper","visible","active","Select","options","onChangeOption","mappedOptions","option","select","packsAPI","cardPacks","cardPacksTotalCount","minCardsCount","maxCardsCount","privatePacks","setCardPacks","SET_CARD_PACKS","setPacksCurrentPage","SET_PACKS_CURRENT_PAGE","setPacksCountOnPage","SET_PACKS_COUNT_ON_PAGE","setPacksTotalCount","SET_PACKS_TOTAL_COUNT","fetchCardPacks","packs","userID","auth","packName","user_id","publicRoutes","path","HOME","component","exact","PROFILE","useDispatch","newName","setNewName","newAvatar","setNewAvatar","src","avatar","alt","name","style","maxHeight","publicCardPacksCount","updatedUser","to","LOGIN","REGISTRATION","confirmPassword","values","setValues","onSubmit","registrationsData","preventDefault","htmlFor","id","display","flexDirection","alignItems","gap","textAlign","marginTop","rememberMe","loginData","PASSWORD_RECOVERY","setEmail","CHECK_EMAIL","passwordRecovery","NEW_PASSWORD_WITH_TOKEN","token","useParams","successChangePassword","resetPasswordToken","changePassSuccess","SET_SUCCESS_PASSWORD","checkEmailContainer","PACKS","add","remove","update","isPrivatePacks","setIsPrivatePacks","searchValue","setSearchValue","rangeValues","setRangeValues","rangeMarks","0","fontSize","100","prompt","cardsPack","private","item","user_name","cardsCount","updated","slice","CARDS","debouncedRange","useCallback","_","debounce","SET_MIN_MAX_CARDS_COUNT","debouncedSearch","SET_PRIVATE_PACKS","marks","Number","CARDS_WITH_ID","searchQuestionValue","setSearchQuestionValue","searchAnswerValue","setSearchAnswerValue","currentCardsPack","find","p","question","card","answer","grade","6","debouncedQuestionSearch","debouncedAnswerSearch","SET_MIN_MAX_GRADE","SET_CURRENT_CARDS_PACK_ID","ERROR","Progress","progressContainer","progressBar","AppRouter","EMPTY","ReactIcon","Header","activeClassName","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","window","Alert","text","open","onClose","isOpen","setIsOpen","closeSnackbar","timeoutID","setTimeout","clearTimeout","AlertError","onCloseHandler","AlertInfo","Alerts","App","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b401eb31.chunk.js","sourcesContent":["enum APP_ACTIONS_TYPES {\r\n    SET_APP_IS_LOADING = 'APP/SET_APP_IS_LOADING',\r\n    SET_APP_ERROR = 'APP/SET_APP_ERROR',\r\n    SET_APP_INITIALIZED = 'APP/SET_INITIALIZED',\r\n    SET_APP_INFO = 'APP/SET_APP_INFO',\r\n}\r\n\r\ntype AppActions =\r\n    | ReturnType<typeof setAppIsLoading>\r\n    | ReturnType<typeof setAppError>\r\n    | ReturnType<typeof setAppInitialized>\r\n    | ReturnType<typeof setAppInfo>\r\n\r\nexport type AppInitialState = {\r\n    isLoading: boolean\r\n    isInitialized: boolean\r\n    error: string\r\n    info: string\r\n}\r\n\r\nconst initialState: AppInitialState = {\r\n    isLoading: false,\r\n    isInitialized: false,\r\n    error: '',\r\n    info: ''\r\n}\r\n\r\nexport const appReducer = (state = initialState, action: AppActions): AppInitialState => {\r\n    switch (action.type) {\r\n        case APP_ACTIONS_TYPES.SET_APP_INITIALIZED:\r\n            return {...state, isInitialized: action.payload.status}\r\n        case APP_ACTIONS_TYPES.SET_APP_IS_LOADING:\r\n            return {...state, isLoading: action.payload.status}\r\n        case APP_ACTIONS_TYPES.SET_APP_ERROR:\r\n            return {...state, error: action.payload.error}\r\n        case APP_ACTIONS_TYPES.SET_APP_INFO:\r\n            return {...state, info: action.payload.info}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAppIsLoading = (status: boolean) => ({\r\n    type: APP_ACTIONS_TYPES.SET_APP_IS_LOADING,\r\n    payload: {status}\r\n} as const)\r\n\r\nexport const setAppError = (error: string) => ({\r\n    type: APP_ACTIONS_TYPES.SET_APP_ERROR,\r\n    payload: {error}\r\n} as const)\r\n\r\nexport const setAppInitialized = (status: boolean) => ({\r\n    type: APP_ACTIONS_TYPES.SET_APP_INITIALIZED,\r\n    payload: {status}\r\n} as const)\r\n\r\nexport const setAppInfo = (info: string) => ({\r\n    type: APP_ACTIONS_TYPES.SET_APP_INFO,\r\n    payload: {info}\r\n} as const)","import {TypedUseSelectorHook, useSelector} from 'react-redux'\r\nimport {RootState} from '../store/store'\r\nimport {ChangeEvent, useEffect, useState} from 'react'\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector\r\n\r\nexport const useInput = (initialValue: string, validators: Validators) => {\r\n    const [value, setValue] = useState(initialValue)\r\n    const [touched, setTouched] = useState(false)\r\n    const validation = useValidation(value, validators)\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => setValue(e.currentTarget.value)\r\n    const onBlur = () => setTouched(true)\r\n\r\n    return {\r\n        value,\r\n        touched,\r\n        onChange,\r\n        onBlur,\r\n        validation\r\n    }\r\n}\r\n\r\ntype Validators = {\r\n    isRequired?: boolean\r\n    minLength?: number\r\n    maxLength?: number\r\n    isEmail?: boolean\r\n}\r\n\r\nexport const useValidation = (value: string, validators: Validators) => {\r\n    const [isValid, setIsValid] = useState(false)\r\n\r\n    const [isRequired, setIsRequired] = useState('')\r\n    const [isEmail, setIsEmail] = useState('')\r\n    const [minLength, setMinLength] = useState('')\r\n    const [maxLength, setMaxLength] = useState('')\r\n\r\n    useEffect(() => {\r\n        for (const validator in validators) {\r\n            switch (validator) {\r\n                case 'isRequired':\r\n                    !value\r\n                        ? setIsRequired('Field is required')\r\n                        : setIsRequired('')\r\n                    break\r\n\r\n                case 'minLength':\r\n                    value.length < validators[validator]!\r\n                        ? setMinLength(`Min length must be more than ${validators[validator]!}`)\r\n                        : setMinLength('')\r\n                    break\r\n\r\n                case 'maxLength':\r\n                    value.length > validators[validator]!\r\n                        ? setMaxLength(`Max length must be less than ${validators[validator]!}`)\r\n                        : setMaxLength('')\r\n                    break\r\n\r\n                case 'isEmail':\r\n                    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n                        .test(String(value).toLowerCase())\r\n                        ? setIsEmail('')\r\n                        : setIsEmail('Wrong email address')\r\n                    break\r\n\r\n            }\r\n        }\r\n    }, [value, validators])\r\n\r\n    useEffect(() => {\r\n        (isRequired || isEmail || minLength || maxLength) ? setIsValid(false) : setIsValid(true)\r\n    }, [isRequired, isEmail, minLength, maxLength])\r\n\r\n    return {\r\n        isValid,\r\n        isRequired,\r\n        isEmail,\r\n        minLength,\r\n        maxLength\r\n    }\r\n}","import axios from 'axios'\r\n\r\nexport const developmentMode = false\r\n\r\nexport const instance = axios.create({\r\n    baseURL: developmentMode ? 'http://localhost:7542/2.0' : 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true\r\n})","import {instance} from './axios-instance'\r\nimport axios, {AxiosResponse} from 'axios'\r\n\r\n// Requests\r\nexport type LoginData = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean\r\n}\r\n\r\nexport type RegistrationsData = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\nexport type ChangeUsersInfoData = {\r\n    name: string\r\n    avatar: string\r\n}\r\n\r\nexport type PasswordRecoveryData = {\r\n    email: string,\r\n    from: string,\r\n    message: string\r\n}\r\n\r\nexport type NewPasswordData = {\r\n    password: string,\r\n    resetPasswordToken: string | undefined\r\n}\r\n\r\n// Responses\r\ntype LogoutResponse = {\r\n    info: string\r\n    error?: string\r\n}\r\n\r\nexport type UsersInfoResponse = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n}\r\n\r\ntype UpdateUserResponse = {\r\n    updatedUser: UsersInfoResponse\r\n    error?: string\r\n}\r\n\r\nexport type PasswordResponse = {\r\n    info: string,\r\n    error: string\r\n}\r\n\r\n// API\r\nexport const authAPI = {\r\n    registration: (payload: RegistrationsData) => instance\r\n        .post<RegistrationsData, AxiosResponse<{ error?: string }>>('/auth/register', payload),\r\n\r\n    logout: () => instance\r\n        .delete<LogoutResponse>('/auth/me'),\r\n\r\n    checkAuth: () => instance\r\n        .post<{}, AxiosResponse<UsersInfoResponse>>('/auth/me', {}),\r\n\r\n    changeUsersInfo: (payload: ChangeUsersInfoData) => instance\r\n        .put<ChangeUsersInfoData, AxiosResponse<UpdateUserResponse>>('/auth/me', payload),\r\n\r\n    login: (payload: LoginData) => instance\r\n        .post<LoginData, AxiosResponse<UsersInfoResponse>>(`/auth/login`, payload),\r\n\r\n    passwordRecovery: (payload: PasswordRecoveryData) => axios\r\n        .post<PasswordRecoveryData, AxiosResponse<PasswordResponse>>('https://neko-back.herokuapp.com/2.0/auth/forgot', payload),\r\n\r\n    newPassword: (payload: NewPasswordData) => axios\r\n        .post<NewPasswordData, AxiosResponse<PasswordResponse>>(`https://neko-back.herokuapp.com/2.0/auth/set-new-password`, payload)\r\n}","import {authAPI, ChangeUsersInfoData, LoginData, RegistrationsData, UsersInfoResponse} from '../../api/auth-api'\r\nimport {AppDispatch} from '../store'\r\nimport {setAppInfo, setAppInitialized, setAppIsLoading} from './app-reducer'\r\nimport {passwordRecoveryMessage} from '../../utils/passwordRecoveryMessage'\r\nimport {errorsHandler} from '../../utils/errors'\r\n\r\nenum AUTH_ACTIONS_TYPES {\r\n    SET_REGISTRATION_SUCCESS = 'AUTH/SET_REGISTRATION_SUCCESS',\r\n    SET_USERS_INFO = 'AUTH/SET_USERS_INFO',\r\n    SET_IS_LOGGED_IN = 'AUTH/SET_IS_LOGGED_IN',\r\n    SET_EMAIL_RECOVERY = 'AUTH/SET_EMAIL_RECOVERY',\r\n    SET_SUCCESS_PASSWORD = 'AUTH/SET_SUCCESS_PASSWORD',\r\n    SEND_RECOVERY_EMAIL_SUCCESS = 'AUTH/SEND_RECOVERY_EMAIL_SUCCESS',\r\n}\r\n\r\ntype AuthActions =\r\n    | ReturnType<typeof setRegistrationSuccess>\r\n    | ReturnType<typeof setUsersInfo>\r\n    | ReturnType<typeof setIsLoggedIn>\r\n    | ReturnType<typeof setEmailRecovery>\r\n    | ReturnType<typeof setSuccessPassword>\r\n    | ReturnType<typeof setSendEmailSuccess>\r\n\r\nexport type AuthInitialState = {\r\n    registrationSuccess: boolean\r\n    isLoggedIn: boolean\r\n    recoveryEmail: string\r\n    userInfo: UsersInfoResponse | null\r\n    setSuccessNewPass: boolean\r\n    sendSuccessEmail: boolean\r\n}\r\n\r\nconst initialState: AuthInitialState = {\r\n    registrationSuccess: false,\r\n    isLoggedIn: false,\r\n    recoveryEmail: '',\r\n    userInfo: null,\r\n    setSuccessNewPass: false,\r\n    sendSuccessEmail: false,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action: AuthActions): AuthInitialState => {\r\n    switch (action.type) {\r\n        case AUTH_ACTIONS_TYPES.SET_REGISTRATION_SUCCESS:\r\n            return {...state, registrationSuccess: action.payload.status}\r\n\r\n        case AUTH_ACTIONS_TYPES.SET_USERS_INFO:\r\n            return {...state, userInfo: action.payload}\r\n\r\n        case AUTH_ACTIONS_TYPES.SET_IS_LOGGED_IN:\r\n            return {...state, isLoggedIn: action.payload.status}\r\n\r\n        case AUTH_ACTIONS_TYPES.SET_EMAIL_RECOVERY:\r\n            return {...state, recoveryEmail: action.payload.email}\r\n\r\n        case AUTH_ACTIONS_TYPES.SET_SUCCESS_PASSWORD:\r\n            return {...state, setSuccessNewPass: action.payload.changePassSuccess}\r\n\r\n        case AUTH_ACTIONS_TYPES.SEND_RECOVERY_EMAIL_SUCCESS:\r\n            return {...state, sendSuccessEmail: action.payload.successSend}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setRegistrationSuccess = (status: boolean) => ({\r\n    type: AUTH_ACTIONS_TYPES.SET_REGISTRATION_SUCCESS,\r\n    payload: {status}\r\n} as const)\r\n\r\nexport const setUsersInfo = (info: UsersInfoResponse | null) => ({\r\n    type: AUTH_ACTIONS_TYPES.SET_USERS_INFO,\r\n    payload: info\r\n} as const)\r\n\r\nexport const setIsLoggedIn = (status: boolean) => ({\r\n    type: AUTH_ACTIONS_TYPES.SET_IS_LOGGED_IN,\r\n    payload: {status}\r\n} as const)\r\n\r\nexport const setEmailRecovery = (email: string) => ({\r\n    type: AUTH_ACTIONS_TYPES.SET_EMAIL_RECOVERY,\r\n    payload: {email}\r\n} as const)\r\n\r\nexport const setSuccessPassword = (changePassSuccess: boolean) => ({\r\n    type: AUTH_ACTIONS_TYPES.SET_SUCCESS_PASSWORD,\r\n    payload: {changePassSuccess}\r\n} as const)\r\n\r\nexport const setSendEmailSuccess = (successSend: boolean) => ({\r\n    type: AUTH_ACTIONS_TYPES.SEND_RECOVERY_EMAIL_SUCCESS,\r\n    payload: {successSend}\r\n} as const)\r\n\r\nexport const registration = (registrationsData: RegistrationsData) => async (dispatch: AppDispatch) => {\r\n    try {\r\n        dispatch(setAppIsLoading(true))\r\n        await authAPI.registration(registrationsData)\r\n        dispatch(setRegistrationSuccess(true))\r\n        dispatch(setAppInfo(`Successful! Now you can login!`))\r\n    } catch (e) {\r\n        errorsHandler(e, dispatch)\r\n    } finally {\r\n        dispatch(setRegistrationSuccess(false))\r\n        dispatch(setAppIsLoading(false))\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch: AppDispatch) => {\r\n    try {\r\n        dispatch(setAppIsLoading(true))\r\n        const response = await authAPI.logout()\r\n        dispatch(setUsersInfo(null))\r\n        dispatch(setIsLoggedIn(false))\r\n        dispatch(setAppInfo(response.data.info))\r\n    } catch (e) {\r\n        errorsHandler(e, dispatch)\r\n    } finally {\r\n        dispatch(setAppIsLoading(false))\r\n    }\r\n}\r\n\r\nexport const checkAuth = () => async (dispatch: AppDispatch) => {\r\n    try {\r\n        dispatch(setAppIsLoading(true))\r\n        const response = await authAPI.checkAuth()\r\n        dispatch(setUsersInfo(response.data))\r\n        dispatch(setIsLoggedIn(true))\r\n    } catch (e) {\r\n        errorsHandler('', dispatch)\r\n    } finally {\r\n        dispatch(setAppIsLoading(false))\r\n        dispatch(setAppInitialized(true))\r\n    }\r\n}\r\n\r\nexport const changeUsersInfo = (info: ChangeUsersInfoData) => async (dispatch: AppDispatch) => {\r\n    try {\r\n        dispatch(setAppIsLoading(true))\r\n        const response = await authAPI.changeUsersInfo(info)\r\n        dispatch(setUsersInfo(response.data.updatedUser))\r\n        dispatch(setAppInfo('You\\'ve successfully changed your info!'))\r\n    } catch (e) {\r\n        errorsHandler(e, dispatch)\r\n    } finally {\r\n        dispatch(setAppIsLoading(false))\r\n    }\r\n}\r\n\r\nexport const login = (loginData: LoginData) => async (dispatch: AppDispatch) => {\r\n    try {\r\n        dispatch(setAppIsLoading(true))\r\n        const response = await authAPI.login(loginData)\r\n        dispatch(setUsersInfo(response.data))\r\n        dispatch(setIsLoggedIn(true))\r\n        dispatch(setAppInfo(`Successful login, ${response.data.name}`))\r\n    } catch (e) {\r\n        errorsHandler(e, dispatch)\r\n    } finally {\r\n        dispatch(setAppIsLoading(false))\r\n    }\r\n}\r\n\r\nexport const passwordRecovery = (email: string) => async (dispatch: AppDispatch) => {\r\n    try {\r\n        dispatch(setAppIsLoading(true))\r\n        const response = await authAPI.passwordRecovery(passwordRecoveryMessage(email))\r\n        dispatch(setSendEmailSuccess(true))\r\n        dispatch(setAppInfo(response.data.info))\r\n        dispatch(setEmailRecovery(email))\r\n    } catch (e) {\r\n        errorsHandler(e, dispatch)\r\n    } finally {\r\n        dispatch(setAppIsLoading(false))\r\n        dispatch(setSendEmailSuccess(false))\r\n    }\r\n}\r\n\r\nexport const newPassword = (password: string, resetPasswordToken: string) => async (dispatch: AppDispatch) => {\r\n    try {\r\n        dispatch(setAppIsLoading(true))\r\n        const response = await authAPI.newPassword({password, resetPasswordToken})\r\n        if (response.status === 200) {\r\n            dispatch(setSuccessPassword(true))\r\n            dispatch(setAppInfo(response.data.info))\r\n        }\r\n    } catch (e) {\r\n        errorsHandler(e, dispatch)\r\n    } finally {\r\n        dispatch(setAppIsLoading(false))\r\n    }\r\n}","import {PATH} from '../routes/routes'\r\nimport {PasswordRecoveryData} from '../api/auth-api'\r\nimport {developmentMode} from '../api/axios-instance'\r\n\r\nexport const passwordRecoveryMessage = (email: string) => {\r\n    const targetLink = developmentMode\r\n        ? `http://localhost:3000/cards-react/#${PATH.NEW_PASSWORD}/$token$`\r\n        : `https://aportraitofjoyce.github.io/cards-react/#${PATH.NEW_PASSWORD}/$token$`\r\n\r\n    const payload: PasswordRecoveryData = {\r\n        email,\r\n        from: 'test-front-admin, <cards@gmail.com>',\r\n        message: `<div style='background-color: #ffb700; padding: 16px'>Password recovery link: <a href='${targetLink}'>link</a></div>`\r\n    }\r\n\r\n    return payload\r\n}\r\n","import {AppDispatch} from '../store/store'\r\nimport {setAppError} from '../store/reducers/app-reducer'\r\n\r\nexport const errorsHandler = (error: any, dispatch: AppDispatch) => {\r\n    dispatch(setAppError(error.response ? error.response.data.error : error))\r\n}","import {\r\n    Card,\r\n    cardsAPI,\r\n    CardsResponse,\r\n    DeleteCardData,\r\n    GetCardsQueryParams,\r\n    NewCardData,\r\n    UpdateCardData\r\n} from '../../api/cards-api'\r\nimport {AppDispatch, RootState, ThunkType} from '../store'\r\nimport {setAppIsLoading} from './app-reducer'\r\nimport {errorsHandler} from '../../utils/errors'\r\n\r\nenum CARDS_ACTIONS_TYPES {\r\n    SET_CARDS = 'CARDS/SET_CARDS',\r\n    SET_CURRENT_CARDS_PACK_ID = 'CARDS/SET_CURRENT_CARDS_PACK_ID',\r\n    SET_CARDS_CURRENT_PAGE = 'CARDS/SET_CARDS_CURRENT_PAGE',\r\n    SET_CARDS_COUNT_ON_PAGE = 'CARDS/SET_CARDS_COUNT_ON_PAGE',\r\n    SET_CARDS_TOTAL_COUNT = 'CARDS/SET_CARDS_TOTAL_COUNT',\r\n    SET_MIN_MAX_GRADE = 'CARDS/SET_MIN_MAX_GRADE',\r\n}\r\n\r\ntype CardsActions =\r\n    | ReturnType<typeof setCards>\r\n    | ReturnType<typeof setCurrentCardsPackID>\r\n    | ReturnType<typeof setCardsCurrentPage>\r\n    | ReturnType<typeof setCardsCountOnPage>\r\n    | ReturnType<typeof setCardsTotalCount>\r\n    | ReturnType<typeof setMinMaxGrade>\r\n\r\nexport type CardsInitialState = CardsResponse & {\r\n    currentCardsPackID: string\r\n}\r\n\r\nconst initialState: CardsInitialState = {\r\n    cards: [],\r\n    page: 1,\r\n    pageCount: 5,\r\n    cardsTotalCount: 0,\r\n    packUserId: '',\r\n    minGrade: 0,\r\n    maxGrade: 6,\r\n    currentCardsPackID: ''\r\n}\r\n\r\nexport const cardsReducer = (state = initialState, action: CardsActions): CardsInitialState => {\r\n    switch (action.type) {\r\n        case CARDS_ACTIONS_TYPES.SET_CARDS:\r\n            return {...state, cards: action.payload}\r\n        case CARDS_ACTIONS_TYPES.SET_CURRENT_CARDS_PACK_ID:\r\n            return {...state, currentCardsPackID: action.payload.id}\r\n        case CARDS_ACTIONS_TYPES.SET_CARDS_CURRENT_PAGE:\r\n            return {...state, page: action.payload.page}\r\n        case CARDS_ACTIONS_TYPES.SET_CARDS_COUNT_ON_PAGE:\r\n            return {...state, pageCount: action.payload.count}\r\n        case CARDS_ACTIONS_TYPES.SET_CARDS_TOTAL_COUNT:\r\n            return {...state, cardsTotalCount: action.payload.count}\r\n        case CARDS_ACTIONS_TYPES.SET_MIN_MAX_GRADE:\r\n            return {...state, minGrade: action.payload.values[0], maxGrade: action.payload.values[1]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setCards = (payload: Card[]) => ({\r\n    type: CARDS_ACTIONS_TYPES.SET_CARDS,\r\n    payload\r\n} as const)\r\n\r\nexport const setCardsCurrentPage = (payload: { page: number }) => ({\r\n    type: CARDS_ACTIONS_TYPES.SET_CARDS_CURRENT_PAGE,\r\n    payload\r\n} as const)\r\n\r\nexport const setCardsCountOnPage = (payload: { count: number }) => ({\r\n    type: CARDS_ACTIONS_TYPES.SET_CARDS_COUNT_ON_PAGE,\r\n    payload\r\n} as const)\r\n\r\nexport const setCardsTotalCount = (payload: { count: number }) => ({\r\n    type: CARDS_ACTIONS_TYPES.SET_CARDS_TOTAL_COUNT,\r\n    payload\r\n} as const)\r\n\r\nexport const setCurrentCardsPackID = (payload: { id: string }) => ({\r\n    type: CARDS_ACTIONS_TYPES.SET_CURRENT_CARDS_PACK_ID,\r\n    payload\r\n} as const)\r\n\r\nexport const setMinMaxGrade = (payload: { values: number[] }) => ({\r\n    type: CARDS_ACTIONS_TYPES.SET_MIN_MAX_GRADE,\r\n    payload\r\n} as const)\r\n\r\nexport const fetchCards = (payload?: GetCardsQueryParams) => async (dispatch: AppDispatch, getState: () => RootState) => {\r\n    const {\r\n        pageCount,\r\n        page,\r\n        minGrade,\r\n        maxGrade,\r\n        currentCardsPackID\r\n    } = getState().cards\r\n\r\n    try {\r\n        dispatch(setAppIsLoading(true))\r\n        const response = await cardsAPI.getCards({\r\n            cardsPack_id: currentCardsPackID,\r\n            page,\r\n            pageCount,\r\n            min: minGrade,\r\n            max: maxGrade,\r\n            cardQuestion: payload?.cardQuestion || undefined,\r\n            cardAnswer: payload?.cardAnswer || undefined,\r\n        })\r\n\r\n        dispatch(setCards(response.data.cards))\r\n        dispatch(setCardsCurrentPage({page: response.data.page}))\r\n        dispatch(setCardsCountOnPage({count: response.data.pageCount}))\r\n        dispatch(setCardsTotalCount({count: response.data.cardsTotalCount}))\r\n    } catch (e) {\r\n        errorsHandler(e, dispatch)\r\n    } finally {\r\n        dispatch(setAppIsLoading(false))\r\n    }\r\n}\r\n\r\nexport const createCard = (payload?: NewCardData): ThunkType => async dispatch => {\r\n    try {\r\n        dispatch(setAppIsLoading(true))\r\n        await cardsAPI.createCard(payload)\r\n        await dispatch(fetchCards())\r\n    } catch (e) {\r\n        errorsHandler(e, dispatch)\r\n    } finally {\r\n        dispatch(setAppIsLoading(false))\r\n    }\r\n}\r\n\r\nexport const deleteCard = (payload: DeleteCardData): ThunkType => async dispatch => {\r\n    try {\r\n        dispatch(setAppIsLoading(true))\r\n        await cardsAPI.deleteCard(payload)\r\n        await dispatch(fetchCards())\r\n    } catch (e) {\r\n        errorsHandler(e, dispatch)\r\n    } finally {\r\n        dispatch(setAppIsLoading(false))\r\n    }\r\n}\r\n\r\nexport const updateCard = (payload: UpdateCardData): ThunkType => async dispatch => {\r\n    try {\r\n        dispatch(setAppIsLoading(true))\r\n        await cardsAPI.updateCard(payload)\r\n        await dispatch(fetchCards())\r\n    } catch (e) {\r\n        errorsHandler(e, dispatch)\r\n    } finally {\r\n        dispatch(setAppIsLoading(false))\r\n    }\r\n}","import React, {FC} from 'react'\r\n\r\nexport const EyeIcon: FC = () => {\r\n    return (\r\n        <svg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none'\r\n             stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round'\r\n             className='feather feather-eye'>\r\n            <path d='M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z'/>\r\n            <circle cx='12' cy='12' r='3'/>\r\n        </svg>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, FC, InputHTMLAttributes, KeyboardEvent, useState} from 'react'\r\nimport s from './Input.module.css'\r\nimport {EyeIcon} from '../../Icons/EyeIcon'\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype InputTextProps = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    password?: boolean\r\n}\r\n\r\nexport const Input: FC<InputTextProps> = props => {\r\n    const {\r\n        type,\r\n        onChange,\r\n        onChangeText,\r\n        onKeyPress,\r\n        onEnter,\r\n        error,\r\n        className,\r\n        spanClassName,\r\n        password,\r\n        ...restProps\r\n    } = props\r\n\r\n    const [isPassword, setIsPassword] = useState(!password)\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e)\r\n        onEnter && e.key === 'Enter' && onEnter()\r\n    }\r\n\r\n    const inputClassNames = `${s.input}${error ? s.errorInput : ''}${className ? className : ''}`\r\n    const spanClassNames = `${s.error}${spanClassName ? spanClassName : ''}`\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <input type={password && isPassword ? 'text' : type}\r\n                   onChange={onChangeCallback}\r\n                   onKeyPress={onKeyPressCallback}\r\n                   className={inputClassNames}\r\n                   placeholder={'Enter some text...'}\r\n                   {...restProps}/>\r\n            {password && <div className={s.eye} onClick={() => setIsPassword(!isPassword)}><EyeIcon/></div>}\r\n            {error && <span className={spanClassNames}>{error}</span>}\r\n        </div>\r\n    )\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps, FC} from 'react'\r\nimport s from './Button.module.css'\r\nimport {useTypedSelector} from '../../../hooks/hooks'\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype ButtonProps = DefaultButtonPropsType & {\r\n    secondary?: boolean\r\n    grouped?: boolean\r\n}\r\n\r\nexport const Button: FC<ButtonProps> = props => {\r\n    const isLoading = useTypedSelector(state => state.app.isLoading)\r\n\r\n    const {secondary, className, grouped, ...restProps} = props\r\n    const classNames = `${secondary ? s.secondary : ''}${grouped ? s.grouped : ''}${className ? className : ''}`\r\n\r\n    return <button className={classNames} disabled={isLoading} {...restProps}/>\r\n}","import React, {ChangeEvent, DetailedHTMLProps, FC, InputHTMLAttributes} from 'react'\r\nimport s from './Checkbox.module.css'\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype CheckboxProps = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nexport const Checkbox: FC<CheckboxProps> = props => {\r\n    const {\r\n        type,\r\n        onChange,\r\n        onChangeChecked,\r\n        className,\r\n        spanClassName,\r\n        children,\r\n        ...restProps\r\n    } = props\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const classNames = `${s.checkbox}${className ? className : ''}`\r\n\r\n    return (\r\n        <label className={s.label}>\r\n            <input type={'checkbox'}\r\n                   onChange={onChangeCallback}\r\n                   className={classNames}\r\n                   {...restProps}/>\r\n            {children && <span>{children}</span>}\r\n        </label>\r\n    )\r\n}","import {instance} from './axios-instance'\r\nimport {AxiosResponse} from 'axios'\r\n\r\nexport type Card = {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    user_id: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\nexport type CardsResponse = {\r\n    cards: Card[]\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    packUserId: string\r\n}\r\n\r\nexport type GetCardsQueryParams = {\r\n    cardsPack_id?: string\r\n    cardAnswer?: string\r\n    cardQuestion?: string\r\n    min?: number\r\n    max?: number\r\n    sortCards?: string\r\n    page?: number\r\n    pageCount?: number\r\n}\r\n\r\nexport type NewCardData = {\r\n    card: {\r\n        cardsPack_id: string\r\n        question?: string\r\n        answer?: string\r\n        grade?: number\r\n        shots?: number\r\n        rating?: number\r\n        answerImg?: string\r\n        questionImg?: string\r\n        questionVideo?: string\r\n        answerVideo?: string\r\n        type?: string\r\n    }\r\n}\r\n\r\nexport type UpdateCardData = {\r\n    card: {\r\n        _id: string\r\n        question?: string\r\n        comments?: string\r\n    }\r\n}\r\n\r\nexport type DeleteCardData = {\r\n    id: string\r\n}\r\n\r\nexport const cardsAPI = {\r\n    getCards: (payload?: GetCardsQueryParams) => instance\r\n        .get<CardsResponse>('/cards/card', {params: payload}),\r\n\r\n    createCard: (payload?: NewCardData) => instance\r\n        .post<NewCardData, AxiosResponse<Card>>('/cards/card', payload),\r\n\r\n    deleteCard: (payload: DeleteCardData) => instance\r\n        .delete<Card>(`/cards/card`, {params: payload}),\r\n\r\n    updateCard: (payload: UpdateCardData) => instance\r\n        .put<UpdateCardData, AxiosResponse<Card>>('/cards/card', payload),\r\n}","import {\r\n    CardsPack,\r\n    CardsPackResponse,\r\n    DeleteCardsPackData,\r\n    GetCardPacksQueryParams,\r\n    NewCardsPackData,\r\n    packsAPI,\r\n    UpdateCardsPackData\r\n} from '../../api/packs-api'\r\nimport {AppDispatch, RootState, ThunkType} from '../store'\r\nimport {setAppIsLoading} from './app-reducer'\r\nimport {errorsHandler} from '../../utils/errors'\r\n\r\nenum PACKS_ACTIONS_TYPES {\r\n    SET_CARD_PACKS = 'PACKS/SET_CARD_PACKS',\r\n    SET_PACKS_CURRENT_PAGE = 'PACKS/SET_PACKS_CURRENT_PAGE',\r\n    SET_PACKS_COUNT_ON_PAGE = 'PACKS/SET_PACKS_COUNT_ON_PAGE',\r\n    SET_PACKS_TOTAL_COUNT = 'PACKS/SET_PACKS_TOTAL_COUNT',\r\n    SET_MIN_MAX_CARDS_COUNT = 'PACKS/SET_MIN_MAX_CARDS_COUNT',\r\n    SET_PRIVATE_PACKS = 'PACKS/SET_PRIVATE_PACKS',\r\n}\r\n\r\nexport type PacksActionsTypes =\r\n    | ReturnType<typeof setCardPacks>\r\n    | ReturnType<typeof setPacksCurrentPage>\r\n    | ReturnType<typeof setPacksCountOnPage>\r\n    | ReturnType<typeof setPacksTotalCount>\r\n    | ReturnType<typeof setMinMaxCardsCount>\r\n    | ReturnType<typeof setPrivatePacks>\r\n\r\nexport type PacksInitialState = CardsPackResponse & {\r\n    privatePacks: boolean\r\n}\r\n\r\nconst initialState: PacksInitialState = {\r\n    cardPacks: [],\r\n    cardPacksTotalCount: 0,\r\n    minCardsCount: 0,\r\n    maxCardsCount: 100,\r\n    page: 1,\r\n    pageCount: 5,\r\n    privatePacks: false,\r\n}\r\n\r\nexport const packsReducer = (state = initialState, action: PacksActionsTypes): PacksInitialState => {\r\n    switch (action.type) {\r\n        case PACKS_ACTIONS_TYPES.SET_CARD_PACKS:\r\n            return {...state, cardPacks: action.payload}\r\n\r\n        case PACKS_ACTIONS_TYPES.SET_PACKS_CURRENT_PAGE:\r\n            return {...state, page: action.payload.page}\r\n\r\n        case PACKS_ACTIONS_TYPES.SET_PACKS_COUNT_ON_PAGE:\r\n            return {...state, pageCount: action.payload.count}\r\n\r\n        case PACKS_ACTIONS_TYPES.SET_MIN_MAX_CARDS_COUNT:\r\n            return {...state, minCardsCount: action.payload.values[0], maxCardsCount: action.payload.values[1]}\r\n\r\n        case PACKS_ACTIONS_TYPES.SET_PACKS_TOTAL_COUNT:\r\n            return {...state, cardPacksTotalCount: action.payload.count}\r\n\r\n        case PACKS_ACTIONS_TYPES.SET_PRIVATE_PACKS:\r\n            return {...state, privatePacks: action.payload.value}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setCardPacks = (payload: CardsPack[]) => ({\r\n    type: PACKS_ACTIONS_TYPES.SET_CARD_PACKS,\r\n    payload\r\n} as const)\r\n\r\nexport const setPacksCurrentPage = (payload: { page: number }) => ({\r\n    type: PACKS_ACTIONS_TYPES.SET_PACKS_CURRENT_PAGE,\r\n    payload\r\n} as const)\r\n\r\nexport const setPacksCountOnPage = (payload: { count: number }) => ({\r\n    type: PACKS_ACTIONS_TYPES.SET_PACKS_COUNT_ON_PAGE,\r\n    payload\r\n} as const)\r\n\r\nexport const setPacksTotalCount = (payload: { count: number }) => ({\r\n    type: PACKS_ACTIONS_TYPES.SET_PACKS_TOTAL_COUNT,\r\n    payload\r\n} as const)\r\n\r\nexport const setMinMaxCardsCount = (payload: { values: number[] }) => ({\r\n    type: PACKS_ACTIONS_TYPES.SET_MIN_MAX_CARDS_COUNT,\r\n    payload\r\n} as const)\r\n\r\nexport const setPrivatePacks = (payload: { value: boolean }) => ({\r\n    type: PACKS_ACTIONS_TYPES.SET_PRIVATE_PACKS,\r\n    payload\r\n} as const)\r\n\r\nexport const fetchCardPacks = (payload?: GetCardPacksQueryParams) => async (dispatch: AppDispatch, getState: () => RootState) => {\r\n    const packs = getState().packs\r\n    const userID = packs.privatePacks && getState().auth.userInfo?._id\r\n    try {\r\n        dispatch(setAppIsLoading(true))\r\n        const response = await packsAPI.getCardPacks({\r\n            page: packs.page,\r\n            pageCount: packs.pageCount,\r\n            min: packs.minCardsCount,\r\n            max: packs.maxCardsCount,\r\n            packName: payload?.packName || undefined,\r\n            user_id: userID || undefined\r\n        })\r\n\r\n        dispatch(setCardPacks(response.data.cardPacks))\r\n        dispatch(setPacksCurrentPage({page: response.data.page}))\r\n        dispatch(setPacksCountOnPage({count: response.data.pageCount}))\r\n        dispatch(setPacksTotalCount({count: response.data.cardPacksTotalCount}))\r\n    } catch (e) {\r\n        errorsHandler(e, dispatch)\r\n    } finally {\r\n        dispatch(setAppIsLoading(false))\r\n    }\r\n}\r\n\r\nexport const createCardsPack = (payload: NewCardsPackData): ThunkType => async dispatch => {\r\n    try {\r\n        dispatch(setAppIsLoading(true))\r\n        await packsAPI.createCardsPack(payload)\r\n        await dispatch(fetchCardPacks())\r\n    } catch (e) {\r\n        errorsHandler(e, dispatch)\r\n    } finally {\r\n        dispatch(setAppIsLoading(false))\r\n    }\r\n}\r\n\r\nexport const deleteCardsPack = (payload: DeleteCardsPackData): ThunkType => async dispatch => {\r\n    try {\r\n        dispatch(setAppIsLoading(true))\r\n        await packsAPI.deleteCardsPack(payload)\r\n        await dispatch(fetchCardPacks())\r\n    } catch (e) {\r\n        errorsHandler(e, dispatch)\r\n    } finally {\r\n        dispatch(setAppIsLoading(false))\r\n    }\r\n}\r\n\r\nexport const updateCardsPack = (payload: UpdateCardsPackData): ThunkType => async dispatch => {\r\n    try {\r\n        dispatch(setAppIsLoading(true))\r\n        await packsAPI.updateCardsPack(payload)\r\n        await dispatch(fetchCardPacks())\r\n    } catch (e) {\r\n        errorsHandler(e, dispatch)\r\n    } finally {\r\n        dispatch(setAppIsLoading(false))\r\n    }\r\n}","import React, {FC, ReactNode} from 'react'\r\nimport s from './Table.module.css'\r\n\r\nexport type TableModel = {\r\n    title: (index: number) => ReactNode\r\n    render: (dataItem: any) => ReactNode\r\n}\r\n\r\ntype TableProps = {\r\n    model: TableModel[]\r\n    data: any\r\n}\r\n\r\nexport const Table: FC<TableProps> = props => {\r\n    const {model, data} = props\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.header}>\r\n                {model.map((m, index) => m.title(index))}\r\n            </div>\r\n\r\n            <div className={s.body}>\r\n                {data.map((dataItem: any, dataIndex: number) => (\r\n                    <div key={'-row-' + (dataItem._id || dataIndex)} className={s.row}>\r\n                        {model.map(m => m.render(dataItem))}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport s from './Pagination.module.css'\r\n\r\ntype PaginationProps = {\r\n    totalCount: number,\r\n    countPerPage: number,\r\n    currentPage: number,\r\n    onChangePage: (page: number) => void\r\n    acc?: number\r\n}\r\n\r\nexport const Pagination = ({totalCount, countPerPage, currentPage, onChangePage, acc = 10}: PaginationProps) => {\r\n    const [visPre, setVisPre] = useState(false)\r\n    const [visNext, setVisNext] = useState(false)\r\n\r\n    let pageNumbers: number = Math.ceil(totalCount / countPerPage)\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= pageNumbers; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const previousPage = currentPage !== 1 ? currentPage - 1 : 1\r\n    const nextPage = currentPage !== pageNumbers ? currentPage + 1 : pageNumbers\r\n    let pageNextAcc = (currentPage + acc) > pageNumbers ? pageNumbers : currentPage + acc\r\n    let pagePreviousAcc = (currentPage - acc) < 1 ? 1 : currentPage - acc\r\n\r\n    useEffect(() => {\r\n        previousPage === currentPage ? setVisPre(true) : setVisPre(false)\r\n        nextPage === currentPage ? setVisNext(true) : setVisNext(false)\r\n    }, [currentPage, nextPage, previousPage])\r\n\r\n    if (isNaN(pageNumbers) || totalCount === 0) {\r\n        return <div/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.container}>\r\n                <span className={`${visPre && s.visible}`}\r\n                      onClick={() => onChangePage(currentPage - 1)}>Prev</span>\r\n\r\n                <span className={`${visPre && s.visible}`}\r\n                      onClick={() => onChangePage(1)}>1</span>\r\n\r\n                <span className={`${visPre && s.visible}`}\r\n                      onClick={() => onChangePage(pagePreviousAcc)}>...</span>\r\n\r\n                <span className={`${visPre && s.visible}`}\r\n                      onClick={() => onChangePage(previousPage)}>{previousPage}</span>\r\n\r\n                <span className={s.active}>{currentPage}</span>\r\n\r\n                <span className={`${visNext && s.visible}`}\r\n                      onClick={() => onChangePage(nextPage)}>{nextPage}</span>\r\n\r\n                <span className={`${visNext && s.visible}`}\r\n                      onClick={() => onChangePage(pageNextAcc)}>...</span>\r\n\r\n                <span className={`${visNext && s.visible}`}\r\n                      onClick={() => onChangePage(pageNumbers)}>{pageNumbers}</span>\r\n\r\n                <span className={`${visNext && s.visible}`}\r\n                      onClick={() => onChangePage(currentPage + 1)}>Next</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent, FC} from 'react'\r\nimport s from './Select.module.css'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options: number[] | string[]\r\n    onChangeOption: (option: string) => void\r\n}\r\n\r\nexport const Select: FC<SuperSelectPropsType> = props => {\r\n    const {options, onChange, onChangeOption, ...restProps} = props\r\n\r\n    const mappedOptions = options ? options.map(option => (\r\n        <option key={option} value={option}>\r\n            {option}\r\n        </option>\r\n    )) : []\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} className={s.select} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}","import {instance} from './axios-instance'\r\nimport {AxiosResponse} from 'axios'\r\n\r\nexport type CardsPack = {\r\n    cardsCount: number\r\n    created: string\r\n    grade: number\r\n    more_id: string\r\n    name: string\r\n    path: string\r\n    private: boolean\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    updated: string\r\n    user_id: string\r\n    user_name: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\nexport type CardsPackResponse = {\r\n    cardPacks: CardsPack[]\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n}\r\n\r\nexport type GetCardPacksQueryParams = {\r\n    min?: number\r\n    max?: number\r\n    sortPacks?: string\r\n    page?: number\r\n    pageCount?: number\r\n    user_id?: string\r\n    packName?: string\r\n}\r\n\r\nexport type NewCardsPackData = {\r\n    cardsPack: {\r\n        name: string\r\n        private?: boolean\r\n    }\r\n}\r\n\r\nexport type UpdateCardsPackData = {\r\n    cardsPack: {\r\n        _id: string\r\n        name: string\r\n    }\r\n}\r\n\r\nexport type DeleteCardsPackData = {\r\n    id: string\r\n}\r\n\r\nexport const packsAPI = {\r\n    getCardPacks: (payload?: GetCardPacksQueryParams) => instance\r\n        .get<CardsPackResponse>('cards/pack', {params: payload}),\r\n\r\n    createCardsPack: (payload: NewCardsPackData) => instance\r\n        .post<NewCardsPackData, AxiosResponse<CardsPack>>('/cards/pack', payload),\r\n\r\n    deleteCardsPack: (payload: DeleteCardsPackData) => instance\r\n        .delete<CardsPack>('/cards/pack', {params: payload}),\r\n\r\n    updateCardsPack: (payload: UpdateCardsPackData) => instance\r\n        .put<UpdateCardsPackData, AxiosResponse<CardsPack>>('/cards/pack', payload),\r\n}","import {FC} from 'react'\r\nimport {Profile} from '../pages/Profile/Profile'\r\nimport {Login} from '../pages/Login/Login'\r\nimport {Registration} from '../pages/Registration/Registration'\r\nimport {Error} from '../pages/Error/Error'\r\nimport {PasswordRecovery} from '../pages/PasswordPages/PasswordRecovery/PasswordRecovery'\r\nimport {NewPassword} from '../pages/PasswordPages/NewPassword/NewPassword'\r\nimport {CheckEmail} from '../pages/PasswordPages/CheckEmail/CheckEmail'\r\nimport {Home} from '../pages/Home/Home'\r\nimport {Cards} from '../pages/Cards/Cards'\r\nimport {Packs} from '../pages/Packs/Packs'\r\n\r\nexport enum PATH {\r\n    HOME = '/',\r\n    EMPTY = '',\r\n    ERROR = '/404',\r\n    PROFILE = '/profile',\r\n    LOGIN = '/login',\r\n    REGISTRATION = '/registration',\r\n    PASSWORD_RECOVERY = '/password-recovery',\r\n    NEW_PASSWORD = '/new-password',\r\n    NEW_PASSWORD_WITH_TOKEN = '/new-password/:token?',\r\n    CHECK_EMAIL = '/check-email',\r\n    PACKS = '/packs',\r\n    CARDS = '/cards',\r\n    CARDS_WITH_ID = '/cards/:id?',\r\n}\r\n\r\ntype Routes = {\r\n    path: string,\r\n    component: FC\r\n    exact?: boolean\r\n}\r\n\r\nexport const publicRoutes: Routes[] = [\r\n    {path: PATH.HOME, component: Home, exact: true},\r\n    {path: PATH.PROFILE, component: Profile},\r\n    {path: PATH.REGISTRATION, component: Registration},\r\n    {path: PATH.LOGIN, component: Login},\r\n    {path: PATH.PASSWORD_RECOVERY, component: PasswordRecovery},\r\n    {path: PATH.NEW_PASSWORD_WITH_TOKEN, component: NewPassword},\r\n    {path: PATH.CHECK_EMAIL, component: CheckEmail},\r\n    {path: PATH.PACKS, component: Packs},\r\n    {path: PATH.CARDS_WITH_ID, component: Cards},\r\n    {path: PATH.ERROR, component: Error},\r\n]","import React, {FC} from 'react'\r\n\r\nexport const Home: FC = () => {\r\n    return (\r\n        <div>\r\n            <h1>Home Page</h1>\r\n        </div>\r\n    )\r\n}","import React, {FC, useEffect, useState} from 'react'\r\nimport {useTypedSelector} from '../../hooks/hooks'\r\nimport {useDispatch} from 'react-redux'\r\nimport {changeUsersInfo, checkAuth} from '../../store/reducers/auth-reducer'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {PATH} from '../../routes/routes'\r\nimport {Pagination} from '../../components/UI/Pagination/Pagination'\r\n\r\nexport const Profile: FC = () => {\r\n    const isLoggedIn = useTypedSelector(state => state.auth.isLoggedIn)\r\n    const {userInfo} = useTypedSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n\r\n    const [newName, setNewName] = useState('')\r\n    const [newAvatar, setNewAvatar] = useState('')\r\n\r\n    const onSubmitHandler = () => {\r\n        dispatch(changeUsersInfo({name: newName, avatar: newAvatar}))\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(checkAuth())\r\n    }, [dispatch])\r\n\r\n    if (!isLoggedIn) return <Redirect to={PATH.LOGIN}/>\r\n\r\n    return (\r\n        <div>\r\n            <h1>Profile</h1>\r\n\r\n            {userInfo && <div>\r\n\t\t\t\t<img src={userInfo.avatar}\r\n\t\t\t\t     alt={userInfo.name}\r\n\t\t\t\t     style={{maxHeight: 400}}/>\r\n\t\t\t\t<div>{userInfo.name}</div>\r\n\t\t\t\t<div>{userInfo.publicCardPacksCount}</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input type='text' placeholder={'New Name'} value={newName}\r\n\t\t\t\t\t       onChange={e => setNewName(e.currentTarget.value)}/>\r\n\r\n\t\t\t\t\t<input type='text' placeholder={'New Avatar URL'} value={newAvatar}\r\n\t\t\t\t\t       onChange={e => setNewAvatar(e.currentTarget.value)}/>\r\n\t\t\t\t\t<button onClick={onSubmitHandler}>Change info</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>}\r\n        </div>\r\n    )\r\n}","import React, {FC, FormEvent, useState} from 'react'\r\nimport {Input} from '../../components/UI/Input/Input'\r\nimport {Button} from '../../components/UI/Button/Button'\r\nimport {useTypedSelector} from '../../hooks/hooks'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport {PATH} from '../../routes/routes'\r\nimport {useDispatch} from 'react-redux'\r\nimport {registration} from '../../store/reducers/auth-reducer'\r\nimport {setAppError} from '../../store/reducers/app-reducer'\r\n\r\nexport const Registration: FC = () => {\r\n    const {registrationSuccess} = useTypedSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n\r\n    const [values, setValues] = useState({\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    })\r\n\r\n    const onSubmit = (e: FormEvent) => {\r\n        e.preventDefault()\r\n        values.password === values.confirmPassword\r\n            ? dispatch(registration({email: values.email, password: values.password}))\r\n            : dispatch(setAppError('CHECK YOUR PASSWORDS!'))\r\n    }\r\n\r\n    if (registrationSuccess) return <Redirect to={PATH.LOGIN}/>\r\n\r\n    return (\r\n        <div>\r\n            <h1>Registration</h1>\r\n\r\n            <form onSubmit={onSubmit}>\r\n                <label htmlFor={'registration-email'}>\r\n                    Email\r\n                    <Input id={'registration-email'}\r\n                           type={'email'}\r\n                           placeholder={'Enter you email address...'}\r\n                           value={values.email}\r\n                           onChange={e => setValues({...values, email: e.currentTarget.value})}/>\r\n                </label>\r\n\r\n                <label htmlFor={'registration-password'}>\r\n                    Password\r\n                    <Input id={'registration-password'}\r\n                           type={'password'}\r\n                           placeholder={'Enter your password...'}\r\n                           value={values.password}\r\n                           password\r\n                           onChange={e => setValues({...values, password: e.currentTarget.value})}/>\r\n                </label>\r\n\r\n                <label htmlFor={'registration-confirm-password'}>\r\n                    Confirm Password\r\n                    <Input id={'registration-confirm-password'}\r\n                           type={'password'}\r\n                           placeholder={'Confirm your password...'}\r\n                           value={values.confirmPassword}\r\n                           password\r\n                           onChange={e => setValues({...values, confirmPassword: e.currentTarget.value})}/>\r\n                </label>\r\n\r\n                <Button type={'submit'}>\r\n                    Register\r\n                </Button>\r\n\r\n                <Link to={PATH.LOGIN} style={{display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 16, textAlign: 'center', marginTop: 32}}><h4>Already have an account? Sign In</h4></Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, {FC, FormEvent, useState} from 'react'\r\nimport {Input} from '../../components/UI/Input/Input'\r\nimport {Button} from '../../components/UI/Button/Button'\r\nimport {Checkbox} from '../../components/UI/Checkbox/Checkbox'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport {PATH} from '../../routes/routes'\r\nimport {useDispatch} from 'react-redux'\r\nimport {useTypedSelector} from '../../hooks/hooks'\r\nimport {login} from '../../store/reducers/auth-reducer'\r\n\r\nexport const Login: FC = () => {\r\n    const isLoggedIn = useTypedSelector(state => state.auth.isLoggedIn)\r\n    const dispatch = useDispatch()\r\n\r\n    const [values, setValues] = useState({\r\n        email: '',\r\n        password: '',\r\n        rememberMe: false\r\n    })\r\n\r\n    const onSubmit = (e: FormEvent) => {\r\n        e.preventDefault()\r\n        dispatch(login({...values}))\r\n    }\r\n\r\n    if (isLoggedIn) return <Redirect to={PATH.PROFILE}/>\r\n\r\n    return (\r\n        <div>\r\n            <h1>Sign In</h1>\r\n\r\n            <form onSubmit={onSubmit}>\r\n                <label htmlFor='login-email'>\r\n                    Email\r\n                    <Input id={'login-email'}\r\n                           type={'email'}\r\n                           placeholder={'Enter your email address...'}\r\n                           value={values.email}\r\n                           onChange={e => setValues({...values, email: e.currentTarget.value})}/>\r\n                </label>\r\n\r\n                <label htmlFor='login-password'>\r\n                    Password\r\n                    <Input id={'login-password'}\r\n                           type={'password'}\r\n                           placeholder={'Enter your password...'}\r\n                           value={values.password}\r\n                           password\r\n                           onChange={e => setValues({...values, password: e.currentTarget.value})}/>\r\n                </label>\r\n\r\n                <Checkbox checked={values.rememberMe}\r\n                          onChange={e => setValues({...values, rememberMe: e.currentTarget.checked})}>\r\n                    Remember me\r\n                </Checkbox>\r\n\r\n                <Button type={'submit'}>Login</Button>\r\n\r\n                <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 16, textAlign: 'center', marginTop: 32}}>\r\n                    <Link to={PATH.PASSWORD_RECOVERY}><h4>Forgot your password?</h4></Link>\r\n                    <Link to={PATH.REGISTRATION}><h4>Don’t have an account? Sign Up!</h4></Link>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, {FC, FormEvent, useState} from 'react'\r\nimport {Button} from '../../../components/UI/Button/Button'\r\nimport {Input} from '../../../components/UI/Input/Input'\r\nimport {useDispatch} from 'react-redux'\r\nimport {passwordRecovery} from '../../../store/reducers/auth-reducer'\r\nimport {useTypedSelector} from '../../../hooks/hooks'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {PATH} from '../../../routes/routes'\r\n\r\nexport const PasswordRecovery: FC = () => {\r\n    const sendSuccessEmail = useTypedSelector(state => state.auth.sendSuccessEmail)\r\n    const [email, setEmail] = useState<string>('')\r\n    const dispatch = useDispatch()\r\n\r\n    const onsubmit = (e: FormEvent) => {\r\n        e.preventDefault()\r\n        dispatch(passwordRecovery(email))\r\n    }\r\n\r\n    if (sendSuccessEmail) return <Redirect to={PATH.CHECK_EMAIL}/>\r\n\r\n    return (\r\n        <div>\r\n            <h1>Forgot your password?</h1>\r\n\r\n            <form onSubmit={onsubmit}>\r\n                <label htmlFor={'password-recovery-email'}>\r\n                    Enter your address and we will send you further instructions\r\n                    <Input type={'email'}\r\n                           id={'password-recovery-email'}\r\n                           placeholder={'Enter your email...'}\r\n                           value={email}\r\n                           onChange={e => setEmail(e.currentTarget.value)}/>\r\n                </label>\r\n\r\n                <Button>Send instructions</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, {FC, FormEvent, useState} from 'react'\r\nimport {Button} from '../../../components/UI/Button/Button'\r\nimport {Input} from '../../../components/UI/Input/Input'\r\nimport {Redirect, useParams} from 'react-router-dom'\r\nimport {useDispatch} from 'react-redux'\r\nimport {newPassword} from '../../../store/reducers/auth-reducer'\r\nimport {useTypedSelector} from '../../../hooks/hooks'\r\nimport {PATH} from '../../../routes/routes'\r\nimport {setAppError} from '../../../store/reducers/app-reducer'\r\n\r\nexport const NewPassword: FC = () => {\r\n    const dispatch = useDispatch()\r\n    const {token} = useParams<{ token: string }>()\r\n    const successChangePassword = useTypedSelector(state => state.auth.setSuccessNewPass)\r\n\r\n    const [values, setValues] = useState({\r\n        password: '',\r\n        confirmPassword: ''\r\n    })\r\n\r\n    const onSubmit = (e: FormEvent) => {\r\n        e.preventDefault()\r\n        values.password === values.confirmPassword\r\n            ? dispatch(newPassword(values.password, token))\r\n            : dispatch(setAppError('CHECK YOUR PASSWORDS!'))\r\n    }\r\n\r\n    if (successChangePassword) return <Redirect to={PATH.LOGIN}/>\r\n\r\n    return (\r\n        <div>\r\n            <h1>Create new password</h1>\r\n            <form onSubmit={onSubmit}>\r\n                <label htmlFor={'password-recovery-new-password'}>\r\n                    New Password\r\n                    <Input id={'password-recovery-new-password'}\r\n                           type={'password'}\r\n                           placeholder={'Enter new password...'}\r\n                           value={values.password}\r\n                           onChange={e => setValues({...values, password: e.currentTarget.value})}/>\r\n                </label>\r\n\r\n                <label htmlFor={'password-recovery-new-confirm-password'}>\r\n                    Confirm New Password\r\n                    <Input id={'password-recovery-new-confirm-password'}\r\n                           type={'password'}\r\n                           placeholder={'Confirm new password...'}\r\n                           value={values.confirmPassword}\r\n                           onChange={e => setValues({...values, confirmPassword: e.currentTarget.value})}/>\r\n                </label>\r\n\r\n                <Button type={'submit'}>Create new password</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useTypedSelector} from '../../../hooks/hooks'\r\nimport s from '../PasswordPages.module.css'\r\n\r\nexport const CheckEmail = () => {\r\n    const {recoveryEmail} = useTypedSelector(state => state.auth)\r\n\r\n    return (\r\n        <div>\r\n            <h1>Check Email</h1>\r\n            <div className={s.checkEmailContainer}>\r\n                <img src='https://su-19.ru/wp-content/uploads/2020/12/mail_ico.png'\r\n                     alt='iconMail'/>\r\n                <h3>We've sent an Email with instructions to:</h3>\r\n                <h3>{recoveryEmail}</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, FC, useCallback, useEffect, useState} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {\r\n    createCardsPack,\r\n    deleteCardsPack,\r\n    fetchCardPacks,\r\n    setMinMaxCardsCount,\r\n    setPacksCountOnPage,\r\n    setPacksCurrentPage,\r\n    setPrivatePacks,\r\n    updateCardsPack\r\n} from '../../store/reducers/packs-reducer'\r\nimport {Pagination} from '../../components/UI/Pagination/Pagination'\r\nimport {Table} from '../../components/UI/Table/Table'\r\nimport {useTypedSelector} from '../../hooks/hooks'\r\nimport {Checkbox} from '../../components/UI/Checkbox/Checkbox'\r\nimport {Input} from '../../components/UI/Input/Input'\r\nimport _ from 'lodash'\r\nimport {packsModel} from './packsModel'\r\nimport {Range} from 'rc-slider'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {PATH} from '../../routes/routes'\r\nimport {Select} from '../../components/UI/Select/Select'\r\n\r\nexport const Packs: FC = () => {\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useTypedSelector(state => state.auth.isLoggedIn)\r\n    const {\r\n        page,\r\n        pageCount,\r\n        cardPacksTotalCount,\r\n        minCardsCount,\r\n        maxCardsCount,\r\n        cardPacks,\r\n        privatePacks\r\n    } = useTypedSelector(state => state.packs)\r\n\r\n    const [isPrivatePacks, setIsPrivatePacks] = useState(privatePacks)\r\n    const [searchValue, setSearchValue] = useState('')\r\n    const [rangeValues, setRangeValues] = useState([minCardsCount, maxCardsCount])\r\n\r\n    const rangeMarks = {\r\n        0: {style: {fontSize: 16}, label: rangeValues[0]},\r\n        100: {style: {fontSize: 16}, label: rangeValues[1]}\r\n    }\r\n\r\n    const model = packsModel(\r\n        () => {\r\n            const name = prompt()\r\n            dispatch(createCardsPack({cardsPack: {name: name!, private: false}}))\r\n        },\r\n        (id) => {\r\n            dispatch(deleteCardsPack({id}))\r\n        },\r\n        (id) => {\r\n            const name = prompt()\r\n            dispatch(updateCardsPack({cardsPack: {_id: id, name: name!}}))\r\n        },\r\n    )\r\n\r\n    const onPageChangeHandler = (page: number) => dispatch(setPacksCurrentPage({page}))\r\n\r\n    const onSelectChangeHandler = (option: string) => dispatch(setPacksCountOnPage({count: Number(option)}))\r\n\r\n    const onPrivateChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(setPrivatePacks({value: e.currentTarget.checked}))\r\n        setIsPrivatePacks(e.currentTarget.checked)\r\n    }\r\n\r\n    const onRangeChangeHandler = (values: number[]) => {\r\n        setRangeValues(values)\r\n        debouncedRange(values)\r\n    }\r\n\r\n    const debouncedRange = useCallback(_.debounce(values => dispatch(setMinMaxCardsCount({values: values})), 500), [])\r\n\r\n    const onSearchChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSearchValue(e.currentTarget.value)\r\n        debouncedSearch(e.currentTarget.value)\r\n    }\r\n\r\n    const debouncedSearch = useCallback(_.debounce(value => dispatch(fetchCardPacks({packName: value})), 500), [])\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchCardPacks())\r\n    }, [page, pageCount, minCardsCount, maxCardsCount, privatePacks])\r\n\r\n    if (!isLoggedIn) return <Redirect to={PATH.LOGIN}/>\r\n\r\n    return (\r\n        <div>\r\n            <h1>Packs</h1>\r\n\r\n            <label htmlFor='packs-search'>\r\n                Search\r\n                <Input id={'packs-search'}\r\n                       placeholder={'Enter pack name...'}\r\n                       value={searchValue}\r\n                       onChange={onSearchChangeHandler}/>\r\n            </label>\r\n\r\n            <Checkbox checked={isPrivatePacks}\r\n                      onChange={onPrivateChangeHandler}>\r\n                Show private\r\n            </Checkbox>\r\n\r\n            <Range value={rangeValues}\r\n                   marks={rangeMarks}\r\n                   onChange={onRangeChangeHandler}/>\r\n\r\n            <Table model={model}\r\n                   data={cardPacks}/>\r\n\r\n            <Select options={[5, 20, 50]} onChangeOption={onSelectChangeHandler}/>\r\n\r\n            <Pagination totalCount={cardPacksTotalCount}\r\n                        countPerPage={pageCount}\r\n                        currentPage={page}\r\n                        onChangePage={onPageChangeHandler}/>\r\n        </div>\r\n    )\r\n}","import {Button} from '../../components/UI/Button/Button'\r\nimport {PATH} from '../../routes/routes'\r\nimport {Link} from 'react-router-dom'\r\nimport {TableModel} from '../../components/UI/Table/Table'\r\nimport {CardsPack} from '../../api/packs-api'\r\n\r\nexport const packsModel = (add: () => void, remove: (id: string) => void, update: (id: string) => void): TableModel[] => [\r\n    {\r\n        title: index => <div key={'name-title-' + index}>Pack Name</div>,\r\n        render: (item: CardsPack) => <div key={'name-cell-' + item._id}>{item.name}</div>\r\n    },\r\n    {\r\n        title: index => <div key={'userName-title-' + index}>User Name</div>,\r\n        render: (item: CardsPack) => <div key={'name-cell-' + item.user_name}>{item.user_name}</div>\r\n    },\r\n    {\r\n        title: index => <div key={'cardsCount-title-' + index}>Cards count</div>,\r\n        render: (item: CardsPack) => <div key={'cardsCount-cell-' + item._id}>{item.cardsCount}</div>\r\n    },\r\n    {\r\n        title: index => <div key={'updated-title-' + index}>Updated</div>,\r\n        render: (item: CardsPack) => <div key={'updated-cell-' + item._id}>{item.updated.slice(5, 16)}</div>\r\n    },\r\n    {\r\n        title: index => <div key={'buttons-title-' + index}><Button onClick={add}>Add</Button></div>,\r\n        render: (item: CardsPack) => <div key={'buttons-cell-' + item._id}>\r\n            <Button onClick={() => remove(item._id)}>Delete</Button>\r\n            <Button onClick={() => update(item._id)}>Update</Button>\r\n            <Link to={PATH.CARDS + '/' + item._id}>Cards</Link>\r\n        </div>\r\n    },\r\n\r\n]","import React, {ChangeEvent, FC, useCallback, useEffect, useState} from 'react'\r\nimport {cardsModel} from './cardsModel'\r\nimport {useDispatch} from 'react-redux'\r\nimport {\r\n    createCard,\r\n    deleteCard,\r\n    fetchCards,\r\n    setCardsCountOnPage,\r\n    setCardsCurrentPage,\r\n    setCurrentCardsPackID,\r\n    setMinMaxGrade,\r\n    updateCard\r\n} from '../../store/reducers/cards-reducer'\r\nimport {useParams} from 'react-router-dom'\r\nimport {Table} from '../../components/UI/Table/Table'\r\nimport {useTypedSelector} from '../../hooks/hooks'\r\nimport _ from 'lodash'\r\nimport {Input} from '../../components/UI/Input/Input'\r\nimport {Pagination} from '../../components/UI/Pagination/Pagination'\r\nimport {Range} from 'rc-slider'\r\nimport {Select} from '../../components/UI/Select/Select'\r\n\r\nexport const Cards: FC = () => {\r\n    const dispatch = useDispatch()\r\n    const {id} = useParams<{ id: string }>()\r\n    const {\r\n        cards,\r\n        page,\r\n        pageCount,\r\n        cardsTotalCount,\r\n        minGrade,\r\n        maxGrade,\r\n    } = useTypedSelector(state => state.cards)\r\n    const cardPacks = useTypedSelector(state => state.packs.cardPacks)\r\n    const [searchQuestionValue, setSearchQuestionValue] = useState('')\r\n    const [searchAnswerValue, setSearchAnswerValue] = useState('')\r\n    const [rangeValues, setRangeValues] = useState([minGrade, maxGrade])\r\n\r\n    const currentCardsPack = cardPacks.find(p => p._id === id)\r\n\r\n    const model = cardsModel(\r\n        () => {\r\n            const question = prompt()\r\n            dispatch(createCard({card: {cardsPack_id: id, question: question!}}))\r\n        },\r\n        id => {\r\n            dispatch(deleteCard({id: id}))\r\n        },\r\n        id => {\r\n            const question = prompt()\r\n            dispatch(updateCard({card: {_id: id, question: question!}}))\r\n        }\r\n    )\r\n\r\n    const rangeMarks = {\r\n        0: {style: {fontSize: 16}, label: rangeValues[0]},\r\n        6: {style: {fontSize: 16}, label: rangeValues[1]}\r\n    }\r\n\r\n    const onPageChangeHandler = (page: number) => dispatch(setCardsCurrentPage({page}))\r\n    const onSelectChangeHandler = (option: string) => dispatch(setCardsCountOnPage({count: Number(option)}))\r\n\r\n    const onQuestionSearchChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSearchQuestionValue(e.currentTarget.value)\r\n        debouncedQuestionSearch(e.currentTarget.value)\r\n    }\r\n\r\n    const onAnswerSearchChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSearchAnswerValue(e.currentTarget.value)\r\n        debouncedAnswerSearch(e.currentTarget.value)\r\n    }\r\n\r\n    const debouncedQuestionSearch = useCallback(_.debounce(value => dispatch(fetchCards({cardQuestion: value})), 500), [])\r\n    const debouncedAnswerSearch = useCallback(_.debounce(value => dispatch(fetchCards({cardAnswer: value})), 500), [])\r\n\r\n    const onRangeChangeHandler = (values: number[]) => {\r\n        setRangeValues(values)\r\n        debouncedRange(values)\r\n    }\r\n\r\n    const debouncedRange = useCallback(_.debounce(values => dispatch(setMinMaxGrade({values: values})), 500), [])\r\n\r\n    useEffect(() => {\r\n        dispatch(setCurrentCardsPackID({id}))\r\n    }, [id])\r\n\r\n    useEffect(() => {\r\n        id && dispatch(fetchCards())\r\n    }, [page, pageCount, minGrade, maxGrade])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Cards</h1>\r\n            {currentCardsPack && <>\r\n\t\t\t\t<p>Pack owner: {currentCardsPack.user_name}</p>\r\n\t\t\t\t<p>Pack name: {currentCardsPack.name}</p>\r\n\t\t\t</>}\r\n\r\n            <label htmlFor='cards-question-search'>\r\n                Question Search\r\n                <Input id={'cards-question-search'}\r\n                       placeholder={'Enter question...'}\r\n                       value={searchQuestionValue}\r\n                       onChange={onQuestionSearchChangeHandler}/>\r\n            </label>\r\n\r\n            <label htmlFor='cards-answer-search'>\r\n                Answer Search\r\n                <Input id={'cards-answer-search'}\r\n                       placeholder={'Enter answer...'}\r\n                       value={searchAnswerValue}\r\n                       onChange={onAnswerSearchChangeHandler}/>\r\n            </label>\r\n\r\n            <Range value={rangeValues}\r\n                   marks={rangeMarks}\r\n                   max={6}\r\n                   onChange={onRangeChangeHandler}/>\r\n\r\n            <Table model={model} data={cards}/>\r\n\r\n            <Select options={[5, 20, 50]} onChangeOption={onSelectChangeHandler}/>\r\n\r\n            <Pagination totalCount={cardsTotalCount}\r\n                        countPerPage={pageCount}\r\n                        currentPage={page}\r\n                        onChangePage={onPageChangeHandler}/>\r\n        </div>\r\n    )\r\n}","import {Button} from '../../components/UI/Button/Button'\r\nimport {TableModel} from '../../components/UI/Table/Table'\r\nimport {Card} from '../../api/cards-api'\r\n\r\nexport const cardsModel = (add: () => void, remove: (id: string) => void, update: (id: string) => void): TableModel[] => [\r\n    {\r\n        title: index => <div key={'question-title-' + index}>Question</div>,\r\n        render: (item: Card) => <div key={'question-cell-' + item._id}>{item.question}</div>\r\n    },\r\n    {\r\n        title: index => <div key={'answer-title-' + index}>Answer</div>,\r\n        render: (item: Card) => <div key={'answer-cell-' + item._id}>{item.answer}</div>\r\n    },\r\n    {\r\n        title: index => <div key={'grade-title-' + index}>Grade</div>,\r\n        render: (item: Card) => <div key={'grade-cell-' + item._id}>{item.grade}</div>\r\n    },\r\n    {\r\n        title: index => <div key={'update-title-' + index}>Updated</div>,\r\n        render: (item: Card) => <div key={'update-cell-' + item._id}>{item.updated.slice(5, 16)}</div>\r\n    },\r\n    {\r\n        title: index => <div key={'buttons-title-' + index}><Button onClick={add}>Add</Button></div>,\r\n        render: (item: Card) => <div key={'buttons-cell-' + item._id}>\r\n            <Button onClick={() => remove(item._id)}>Delete</Button>\r\n            <Button onClick={() => update(item._id)}>Update</Button>\r\n        </div>\r\n    },\r\n\r\n]","import React, {FC} from 'react'\r\n\r\nexport const Error: FC = () => {\r\n    return (\r\n        <div>\r\n            <h1>Error 404</h1>\r\n        </div>\r\n    )\r\n}","import React, {FC} from 'react'\r\nimport s from './Progress.module.css'\r\n\r\nexport const Progress: FC = () => {\r\n    return (\r\n        <div>\r\n            <div className={s.progressContainer}>\r\n                <div className={s.progressBar}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {FC, useEffect} from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport {PATH, publicRoutes} from '../routes/routes'\r\nimport {useTypedSelector} from '../hooks/hooks'\r\nimport {Progress} from '../components/UI/Progress/Progress'\r\nimport {useDispatch} from 'react-redux'\r\nimport {checkAuth} from '../store/reducers/auth-reducer'\r\n\r\nexport const AppRouter: FC = () => {\r\n    const {isLoading, isInitialized} = useTypedSelector(state => state.app)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(checkAuth())\r\n    }, [dispatch])\r\n\r\n    if (!isInitialized) return <Progress/>\r\n\r\n    return (\r\n        <>\r\n            {isLoading && <Progress/>}\r\n            <Switch>\r\n                {publicRoutes.map(r => <Route key={r.path} path={r.path} component={r.component} exact={r.exact}/>)}\r\n                <Redirect from={PATH.EMPTY} to={PATH.ERROR}/>\r\n            </Switch>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const ReactIcon = () => {\r\n    return (\r\n        <svg width='48' height='48' viewBox='0 0 128 128' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n            <rect width='128' height='128'/>\r\n            <path\r\n                d='M64.0001 72.3035C68.4254 72.3035 72.0129 68.7161 72.0129 64.2907C72.0129 59.8654 68.4254 56.278 64.0001 56.278C59.5747 56.278 55.9873 59.8654 55.9873 64.2907C55.9873 68.7161 59.5747 72.3035 64.0001 72.3035Z'\r\n                fill='var(--primary)'/>\r\n            <path\r\n                d='M94.4345 51.0767C92.8882 50.5144 91.2716 49.9521 89.5847 49.4601C90.0064 47.7732 90.3578 46.0863 90.639 44.4696C92.115 35.1917 90.4984 28.655 86 26.1246C84.6645 25.3514 83.1885 25 81.5016 25C76.5815 25 70.3259 28.655 64 34.77C57.6741 28.655 51.4185 25 46.4984 25C44.8115 25 43.3355 25.3514 42 26.1246C37.5016 28.7252 35.885 35.262 37.361 44.4696C37.6422 46.0863 37.9936 47.7732 38.4153 49.4601C36.7284 49.9521 35.1118 50.4441 33.5655 51.0767C24.7796 54.4505 20 59.0895 20 64.2907C20 69.492 24.8498 74.131 33.5655 77.5048C35.1118 78.0671 36.7284 78.6294 38.4153 79.1214C37.9936 80.8083 37.6422 82.4952 37.361 84.1118C35.885 93.3898 37.5016 99.9265 42 102.457C43.3355 103.23 44.8115 103.581 46.4984 103.581C51.4888 103.581 57.7444 99.9265 64 93.8115C70.3259 99.9265 76.5815 103.581 81.5016 103.581C83.1885 103.581 84.6645 103.23 86 102.457C90.4984 99.8562 92.115 93.3195 90.639 84.1118C90.3578 82.4952 90.0064 80.8083 89.5847 79.1214C91.2716 78.6294 92.8882 78.1374 94.4345 77.5048C103.22 74.131 108 69.492 108 64.2907C108 59.0895 103.22 54.4505 94.4345 51.0767V51.0767ZM84.032 29.639C86.9137 31.3259 87.8978 36.5272 86.7029 43.9073C86.492 45.3834 86.1406 46.9297 85.7189 48.5463C82.0639 47.7029 78.1981 47.1406 74.1214 46.7891C71.7316 43.4153 69.2716 40.393 66.8115 37.6518C72.0128 32.5208 77.2843 29.0064 81.5719 29.0064C82.4856 29.0064 83.3291 29.2173 84.032 29.639V29.639ZM76.1597 71.3195C74.8946 73.5687 73.4185 75.8179 71.8722 78.0671C69.2716 78.278 66.6709 78.3482 64 78.3482C61.2588 78.3482 58.6581 78.278 56.1278 78.0671C54.5815 75.8179 53.1757 73.5687 51.9105 71.3195C50.5751 69 49.3099 66.6102 48.1853 64.2907C49.3099 61.9712 50.5751 59.5815 51.9105 57.262C53.1757 55.0128 54.6518 52.7636 56.1981 50.5144C58.7987 50.3035 61.3994 50.2332 64.0703 50.2332C66.8115 50.2332 69.4121 50.3035 71.9425 50.5144C73.4888 52.7636 74.8946 55.0128 76.1597 57.262C77.4952 59.5815 78.7604 61.9712 79.885 64.2907C78.6901 66.6102 77.4952 68.9297 76.1597 71.3195ZM81.9936 69C83.0479 71.4601 83.8914 73.8498 84.6645 76.2396C82.2748 76.8019 79.7444 77.2236 77.0735 77.5751C77.9169 76.2396 78.8307 74.8339 79.6038 73.3578C80.4473 71.8818 81.2204 70.4058 81.9936 69ZM64 88.0479C62.3131 86.2205 60.6965 84.2524 59.1502 82.2141C60.7668 82.2843 62.3834 82.3546 64 82.3546C65.6166 82.3546 67.2332 82.2843 68.8498 82.2141C67.3035 84.2524 65.6869 86.2205 64 88.0479ZM50.9265 77.5048C48.2556 77.1534 45.7252 76.7316 43.3355 76.1693C44.1086 73.8498 44.9521 71.3898 46.0064 68.9297C46.7796 70.3355 47.5527 71.8115 48.3962 73.2173C49.2396 74.7636 50.0831 76.099 50.9265 77.5048V77.5048ZM46.0064 59.5815C44.9521 57.1214 44.1086 54.7316 43.3355 52.3419C45.7252 51.7796 48.2556 51.3578 50.9265 51.0064C50.0831 52.3419 49.1693 53.7476 48.3962 55.2236C47.5527 56.6997 46.7796 58.1757 46.0064 59.5815V59.5815ZM64 40.5335C65.6869 42.361 67.3035 44.3291 68.8498 46.3674C67.2332 46.2971 65.6166 46.2268 64 46.2268C62.3834 46.2268 60.7668 46.2971 59.1502 46.3674C60.6965 44.3291 62.3131 42.361 64 40.5335ZM79.6038 55.2939L77.0735 51.0767C79.7444 51.4281 82.2748 51.8498 84.6645 52.4121C83.8914 54.7316 83.0479 57.1917 81.9936 59.6518C81.2204 58.1757 80.4473 56.6997 79.6038 55.2939ZM41.2971 43.9073C40.1022 36.5272 41.0863 31.3259 43.9681 29.639C44.6709 29.2173 45.5144 29.0064 46.4281 29.0064C50.6454 29.0064 55.9169 32.4505 61.1885 37.6518C58.7284 40.3227 56.2684 43.4153 53.8786 46.7891C49.8019 47.1406 45.9361 47.7732 42.2812 48.5463C41.8594 46.9297 41.5783 45.3834 41.2971 43.9073V43.9073ZM23.9361 64.2907C23.9361 60.9872 27.9425 57.4728 34.9712 54.8722C36.377 54.3099 37.9233 53.8179 39.4697 53.3962C40.5943 56.9105 42 60.6358 43.6869 64.361C42 68.0863 40.524 71.7412 39.4697 75.2556C29.77 72.4441 23.9361 68.2268 23.9361 64.2907ZM43.9681 98.9425C41.0863 97.2556 40.1022 92.0543 41.2971 84.6741C41.508 83.1981 41.8594 81.6518 42.2812 80.0351C45.9361 80.8786 49.8019 81.4409 53.8786 81.7923C56.2684 85.1661 58.7284 88.1885 61.1885 90.9297C55.9872 96.0607 50.7157 99.5751 46.4281 99.5751C45.5144 99.5751 44.6709 99.3642 43.9681 98.9425ZM86.7029 84.6741C87.8978 92.0543 86.9137 97.2556 84.032 98.9425C83.3291 99.3642 82.4856 99.5751 81.5719 99.5751C77.3546 99.5751 72.0831 96.131 66.8115 90.9297C69.2716 88.2588 71.7316 85.1661 74.1214 81.7923C78.1981 81.4409 82.0639 80.8083 85.7189 80.0351C86.1406 81.6518 86.4217 83.1981 86.7029 84.6741V84.6741ZM93.0288 73.7093C91.623 74.2716 90.0767 74.7636 88.5304 75.1853C87.4058 71.6709 86 67.9457 84.3131 64.2205C86 60.4952 87.476 56.8403 88.5304 53.3259C98.23 56.1374 104.064 60.3546 104.064 64.2907C104.064 67.5943 99.9872 71.1086 93.0288 73.7093Z'\r\n                fill='var(--primary)'/>\r\n        </svg>\r\n\r\n    )\r\n}","import React, {FC} from 'react'\r\nimport {Link, NavLink} from 'react-router-dom'\r\nimport {PATH} from '../../routes/routes'\r\nimport s from './Header.module.css'\r\nimport {useDispatch} from 'react-redux'\r\nimport {logout} from '../../store/reducers/auth-reducer'\r\nimport {useTypedSelector} from '../../hooks/hooks'\r\nimport {ReactIcon} from '../Icons/ReactIcon'\r\n\r\nexport const Header: FC = () => {\r\n    const isLoggedIn = useTypedSelector(state => state.auth.isLoggedIn)\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <nav className={s.container}>\r\n                <Link to={PATH.HOME}><ReactIcon/></Link>\r\n                <NavLink activeClassName={s.active} to={PATH.PROFILE}>Profile</NavLink>\r\n                <NavLink activeClassName={s.active} to={PATH.PACKS}>Packs</NavLink>\r\n                <NavLink activeClassName={s.active} to={PATH.CARDS}>Cards</NavLink>\r\n\r\n                {!isLoggedIn\r\n                    ? <NavLink activeClassName={s.active} to={PATH.LOGIN}>Login</NavLink>\r\n                    : <span onClick={() => dispatch(logout())}>Logout</span>}\r\n            </nav>\r\n        </div>\r\n    )\r\n}","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunk, {ThunkAction} from 'redux-thunk'\r\nimport {authReducer} from './reducers/auth-reducer'\r\nimport {appReducer} from './reducers/app-reducer'\r\nimport {packsReducer} from './reducers/packs-reducer'\r\nimport {cardsReducer} from './reducers/cards-reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    auth: authReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type ThunkType<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, any>\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React, {FC, useCallback, useEffect, useState} from 'react'\r\nimport s from './Alerts.module.css'\r\n\r\ntype AlertProps = {\r\n    type: 'error' | 'success'\r\n    text: string | null\r\n    open: boolean\r\n    onClose: () => void\r\n}\r\n\r\nexport const Alert: FC<AlertProps> = props => {\r\n    const {type, text, open, onClose} = props\r\n    const [isOpen, setIsOpen] = useState<boolean>(open)\r\n\r\n    const closeSnackbar = useCallback(() => {\r\n        setIsOpen(false)\r\n        onClose()\r\n    }, [onClose])\r\n\r\n    useEffect(() => {\r\n        setIsOpen(open)\r\n        const timeoutID = setTimeout(() => {\r\n            closeSnackbar()\r\n        }, 3500)\r\n\r\n        return () => clearTimeout(timeoutID)\r\n    }, [closeSnackbar, open])\r\n\r\n    return (\r\n        <>\r\n            {isOpen &&\r\n\t\t\t<div className={`${s.container} ${type === 'error' && s.error}`}>\r\n\t\t\t\t<div>{text ? text : 'I am Alert'}</div>\r\n\t\t\t\t<span onClick={closeSnackbar}>X</span>\r\n\t\t\t</div>}\r\n        </>\r\n    )\r\n}","import React, {FC, useCallback} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {useTypedSelector} from '../../../../hooks/hooks'\r\nimport {setAppError} from '../../../../store/reducers/app-reducer'\r\nimport {Alert} from '../Alert'\r\n\r\nexport const AlertError: FC = () => {\r\n    const error = useTypedSelector(state => state.app.error)\r\n    const dispatch = useDispatch()\r\n\r\n    const onCloseHandler = useCallback(() => {\r\n        dispatch(setAppError(''))\r\n    }, [dispatch])\r\n\r\n    return <Alert type={'error'} text={error} open={!!error} onClose={onCloseHandler}/>\r\n}","import React, {FC, useCallback} from 'react'\r\nimport {useTypedSelector} from '../../../../hooks/hooks'\r\nimport {useDispatch} from 'react-redux'\r\nimport {setAppInfo} from '../../../../store/reducers/app-reducer'\r\nimport {Alert} from '../Alert'\r\n\r\nexport const AlertInfo: FC = () => {\r\n    const info = useTypedSelector(state => state.app.info)\r\n    const dispatch = useDispatch()\r\n\r\n    const onCloseHandler = useCallback(() => {\r\n        dispatch(setAppInfo(''))\r\n    }, [dispatch])\r\n\r\n    return <Alert type={'success'} text={info} open={!!info} onClose={onCloseHandler}/>\r\n}","import React, {FC} from 'react'\r\nimport s from './Alerts.module.css'\r\nimport {AlertError} from './AlertError/AlertError'\r\nimport {AlertInfo} from './AlertInfo/AlertInfo'\r\n\r\nexport const Alerts: FC = () => {\r\n    return (\r\n        <div>\r\n            <div className={s.wrapper}>\r\n                <AlertError/>\r\n                <AlertInfo/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {FC} from 'react'\r\nimport {AppRouter} from './AppRouter'\r\nimport {HashRouter} from 'react-router-dom'\r\nimport {Header} from '../components/Header/Header'\r\nimport {Provider} from 'react-redux'\r\nimport {store} from '../store/store'\r\nimport {Alerts} from '../components/UI/Alerts/Alerts'\r\n\r\nexport const App: FC = () => {\r\n    return (\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <Alerts/>\r\n                <Header/>\r\n                <AppRouter/>\r\n            </Provider>\r\n        </HashRouter>\r\n    )\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport 'rc-slider/assets/index.css'\r\nimport {App} from './app/App'\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.getElementById('root')\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Pagination_wrapper__2kCHc\",\"container\":\"Pagination_container__3B8gA\",\"active\":\"Pagination_active__2fQF7\",\"visible\":\"Pagination_visible__oSrCA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__2vAGZ\",\"container\":\"Header_container__236E4\",\"active\":\"Header_active__PRANC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Input_container__3GYcG\",\"errorInput\":\"Input_errorInput__3GgPO\",\"error\":\"Input_error__2xVl4\",\"eye\":\"Input_eye__t2ZpX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Alerts_wrapper__3iz35\",\"container\":\"Alerts_container__ZWW9s\",\"show\":\"Alerts_show__1kTn9\",\"error\":\"Alerts_error__3qzQq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Table_container__J8wAq\",\"header\":\"Table_header__19kdI\",\"footer\":\"Table_footer__2tPH1\",\"body\":\"Table_body__3-UBc\",\"row\":\"Table_row__1IVUe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__2galI\",\"secondary\":\"Button_secondary__3XSP1\",\"grouped\":\"Button_grouped__3cKo2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"Checkbox_checkbox__3lVeK\",\"label\":\"Checkbox_label__13Lse\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progressContainer\":\"Progress_progressContainer__2xQcm\",\"progressBar\":\"Progress_progressBar__15UTX\",\"loading\":\"Progress_loading__22sHP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkEmailContainer\":\"PasswordPages_checkEmailContainer__2PhIl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Select_select__2R5g6\"};"],"sourceRoot":""}