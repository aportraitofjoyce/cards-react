{"version":3,"sources":["components/Header/Header.module.css","components/UI/Input/Input.module.css","pages/NewPassword/NewPassword.module.css","pages/PasswordRecovery/CheckEmail/CheckEmail.module.css","components/UI/Button/Button.module.css","components/UI/Progress/Progress.module.css","components/UI/Checkbox/Checkbox.module.css","store/reducers/app-reducer.ts","api/axios-instance.ts","api/auth-api.ts","store/reducers/auth-reducer.ts","routes/routes.ts","hooks/hooks.ts","components/UI/Input/Input.tsx","components/UI/Button/Button.tsx","components/UI/Checkbox/Checkbox.tsx","api/login-api.ts","store/reducers/login-reducer.ts","pages/Home/Home.tsx","pages/Profile/Profile.tsx","pages/Registration/Registration.tsx","pages/Login/Login.tsx","pages/PasswordRecovery/ForgotPassword.tsx","pages/NewPassword/NewPassword.tsx","pages/PasswordRecovery/CheckEmail/CheckEmail.tsx","pages/Error/Error.tsx","components/UI/Progress/Progress.tsx","app/AppRouter.tsx","components/Header/Header.tsx","store/reducers/profile-reducer.ts","store/store.ts","app/App.tsx","index.tsx"],"names":["module","exports","APP_ACTIONS_TYPES","instance","axios","create","baseURL","withCredentials","authAPI","payload","post","delete","AUTH_ACTIONS_TYPES","initialState","status","error","isInitialized","setAppStatus","type","SET_APP_STATUS","setAppError","SET_APP_ERROR","PATH","registrationSuccess","isLoggedIn","recoveryEmail","userInfo","setRegistrationSuccess","SET_REGISTRATION_SUCCESS","setUsersInfo","info","SET_USERS_INFO","setIsLoggedIn","SET_IS_LOGGED_IN","setEmailRecovery","email","SET_EMAIL_RECOVERY","checkAuth","dispatch","a","response","data","message","SET_APP_INITIALIZED","useTypedSelector","useSelector","useInput","initialValue","validators","useState","value","setValue","touched","setTouched","onChange","e","currentTarget","onBlur","validation","useValidation","isValid","setIsValid","isRequired","setIsRequired","isEmail","setIsEmail","minLength","setMinLength","maxLength","setMaxLength","useEffect","validator","length","test","String","toLowerCase","Input","props","onChangeText","onKeyPress","onEnter","className","spanClassName","restProps","inputClassNames","s","errorInput","spanClassNames","container","key","placeholder","Button","secondary","grouped","classNames","Checkbox","onChangeChecked","children","checkbox","checked","loginApi","password","rememberMe","SET_USER_DATA","name","avatar","publicCardPacksCount","userPostLogin","then","res","setUserData","catch","console","log","finally","publicRoutes","path","HOME","component","exact","PROFILE","state","auth","login","useDispatch","to","LOGIN","REGISTRATION","confirmPassword","onSubmit","registrationsData","preventDefault","alert","style","display","flexDirection","gap","htmlFor","id","color","disabled","setEmail","setPassword","remember","setRemember","history","useHistory","push","PASSWORD_RECOVERY","NEW_PASSWORD","linkInRecoverEmailToGithubPages","from","passwordRecovery","CHECK_EMAIL","token","useParams","firstPass","setFirstPass","secondPass","setSecondPass","wrapper","form","resetPasswordToken","setTimeout","checkEmail","icon","src","alt","ERROR","Progress","progressContainer","progressBar","AppRouter","app","map","r","EMPTY","Header","activeClassName","active","marginRight","onClick","rootReducer","combineReducers","action","profile","store","createStore","applyMiddleware","thunk","window","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2412e012.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__2vAGZ\",\"container\":\"Header_container__236E4\",\"active\":\"Header_active__PRANC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Input_container__3GYcG\",\"errorInput\":\"Input_errorInput__3GgPO\",\"error\":\"Input_error__2xVl4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NewPassword_wrapper__17zrJ\",\"container\":\"NewPassword_container__GjiqG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkEmail\":\"CheckEmail_checkEmail__1T71d\",\"container\":\"CheckEmail_container__3RPFL\",\"icon\":\"CheckEmail_icon__2LX8H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__2galI\",\"secondary\":\"Button_secondary__3XSP1\",\"grouped\":\"Button_grouped__3cKo2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progressContainer\":\"Progress_progressContainer__2xQcm\",\"progressBar\":\"Progress_progressBar__15UTX\",\"loading\":\"Progress_loading__22sHP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"Checkbox_checkbox__3lVeK\"};","export type AppStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\n// Types\r\nenum APP_ACTIONS_TYPES {\r\n    SET_APP_STATUS = 'APP/SET_APP_STATUS',\r\n    SET_APP_ERROR = 'APP/SET_APP_ERROR',\r\n    SET_APP_INITIALIZED = 'APP/SET_INITIALIZED',\r\n}\r\n\r\nexport type AppActions =\r\n    | ReturnType<typeof setAppStatus>\r\n    | ReturnType<typeof setAppError>\r\n    | ReturnType<typeof setAppInitialized>\r\n\r\ntype InitialState = {\r\n    status: AppStatusType\r\n    error: null | string\r\n    isInitialized: boolean\r\n}\r\n\r\n// State\r\nconst initialState: InitialState = {\r\n    status: 'idle',\r\n    error: null,\r\n    isInitialized: false\r\n}\r\n\r\n// Reducer\r\nexport const appReducer = (state = initialState, action: AppActions): InitialState => {\r\n    switch (action.type) {\r\n        case APP_ACTIONS_TYPES.SET_APP_INITIALIZED:\r\n            return {...state, isInitialized: action.payload.status}\r\n        case APP_ACTIONS_TYPES.SET_APP_STATUS:\r\n            return {...state, status: action.payload.status}\r\n        case APP_ACTIONS_TYPES.SET_APP_ERROR:\r\n            return {...state, error: action.payload.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// Actions\r\nexport const setAppStatus = (status: AppStatusType) => ({\r\n    type: APP_ACTIONS_TYPES.SET_APP_STATUS,\r\n    payload: {status}\r\n} as const)\r\n\r\nexport const setAppError = (error: string | null) => ({\r\n    type: APP_ACTIONS_TYPES.SET_APP_ERROR,\r\n    payload: {error}\r\n} as const)\r\n\r\nexport const setAppInitialized = (status: boolean) => ({\r\n    type: APP_ACTIONS_TYPES.SET_APP_INITIALIZED,\r\n    payload: {status}\r\n} as const)","import axios from 'axios'\r\n\r\nconst developmentMode = false\r\n\r\nexport const instance = axios.create({\r\n    baseURL: developmentMode ? 'http://localhost:7542/2.0' : 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true\r\n})","import {instance} from './axios-instance'\r\nimport {AxiosResponse} from 'axios'\r\n\r\n// Types\r\ntype ResponseError = {\r\n    error?: string\r\n}\r\n\r\nexport type RegistrationsData = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\ntype LogoutResponse = {\r\n    info: string\r\n    error?: string\r\n}\r\n\r\nexport type UsersInfoResponse = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\n\r\nexport type ChangeUsersInfoPayload = {\r\n    name: string\r\n    avatar: string\r\n}\r\n\r\nexport type  ForgotRequestType = {\r\n    email: string,\r\n    from: string,\r\n    message: string\r\n}\r\n\r\nexport type SetNewPasswordRequestType = {\r\n    password: string,\r\n    resetPasswordToken: string | undefined\r\n}\r\n\r\nexport type PasswordResponse = {\r\n    info: string,\r\n    error: string\r\n}\r\n\r\n// API\r\nexport const authAPI = {\r\n    registration: (payload: RegistrationsData) => instance\r\n        .post<RegistrationsData, AxiosResponse<ResponseError>>('/auth/register', payload),\r\n\r\n    logout: () => instance\r\n        .delete<LogoutResponse>('/auth/me'),\r\n\r\n    checkAuth: () => instance\r\n        .post<{}, AxiosResponse<UsersInfoResponse>>('/auth/me', {}),\r\n\r\n    changeUsersInfo: (payload: ChangeUsersInfoPayload) => instance\r\n        .put<ChangeUsersInfoPayload, AxiosResponse<UsersInfoResponse>>('/auth/me', payload),\r\n\r\n    login: () => instance,\r\n\r\n    passwordRecovery: (payload: ForgotRequestType) => instance\r\n        .post<ForgotRequestType, AxiosResponse<PasswordResponse>>(`/auth/forgot`, payload),\r\n\r\n    newPassword: (payload: SetNewPasswordRequestType) => instance\r\n        .post<SetNewPasswordRequestType, AxiosResponse<PasswordResponse>>(`/auth/set-new-password`, payload)\r\n}","import {\r\n    authAPI,\r\n    ChangeUsersInfoPayload,\r\n    ForgotRequestType,\r\n    RegistrationsData,\r\n    UsersInfoResponse\r\n} from '../../api/auth-api'\r\nimport {AppDispatch} from '../store'\r\nimport {setAppError, setAppInitialized, setAppStatus} from './app-reducer'\r\nimport {PATH} from '../../routes/routes'\r\n\r\n// Types\r\nenum AUTH_ACTIONS_TYPES {\r\n    SET_REGISTRATION_SUCCESS = 'AUTH/SET_REGISTRATION_SUCCESS',\r\n    SET_USERS_INFO = 'AUTH/SET_USERS_INFO',\r\n    SET_IS_LOGGED_IN = 'AUTH/SET_IS_LOGGED_IN',\r\n    SET_EMAIL_RECOVERY = 'AUTH/SET_EMAIL_RECOVERY',\r\n}\r\n\r\nexport type AuthActions =\r\n    | ReturnType<typeof setRegistrationSuccess>\r\n    | ReturnType<typeof setUsersInfo>\r\n    | ReturnType<typeof setIsLoggedIn>\r\n    | ReturnType<typeof setEmailRecovery>\r\n\r\ntype InitialState = {\r\n    registrationSuccess: boolean\r\n    isLoggedIn: boolean\r\n    recoveryEmail: string | null\r\n    userInfo: UsersInfoResponse | null\r\n}\r\n\r\n// State\r\nconst initialState: InitialState = {\r\n    registrationSuccess: false,\r\n    isLoggedIn: false,\r\n    recoveryEmail: null,\r\n    userInfo: null\r\n}\r\n\r\n// Reducer\r\nexport const authReducer = (state = initialState, action: AuthActions): InitialState => {\r\n    switch (action.type) {\r\n        case AUTH_ACTIONS_TYPES.SET_REGISTRATION_SUCCESS:\r\n            return {...state, registrationSuccess: action.payload.status}\r\n\r\n        case AUTH_ACTIONS_TYPES.SET_USERS_INFO:\r\n            return {...state, userInfo: action.payload}\r\n\r\n        case AUTH_ACTIONS_TYPES.SET_IS_LOGGED_IN:\r\n            return {...state, isLoggedIn: action.payload.status}\r\n\r\n        case AUTH_ACTIONS_TYPES.SET_EMAIL_RECOVERY:\r\n            return {...state, recoveryEmail: action.payload.email}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// Actions\r\nconst setRegistrationSuccess = (status: boolean) => ({\r\n    type: AUTH_ACTIONS_TYPES.SET_REGISTRATION_SUCCESS,\r\n    payload: {status}\r\n} as const)\r\n\r\nconst setUsersInfo = (info: UsersInfoResponse | null) => ({\r\n    type: AUTH_ACTIONS_TYPES.SET_USERS_INFO,\r\n    payload: info\r\n} as const)\r\n\r\nconst setIsLoggedIn = (status: boolean) => ({\r\n    type: AUTH_ACTIONS_TYPES.SET_IS_LOGGED_IN,\r\n    payload: {status}\r\n} as const)\r\n\r\nconst setEmailRecovery = (email: string) => ({\r\n    type: AUTH_ACTIONS_TYPES.SET_EMAIL_RECOVERY,\r\n    payload: {email}\r\n} as const)\r\n\r\n// Thunks\r\nexport const registration = (registrationsData: RegistrationsData) => async (dispatch: AppDispatch) => {\r\n    try {\r\n        dispatch(setAppStatus('loading'))\r\n        await authAPI.registration(registrationsData)\r\n        dispatch(setRegistrationSuccess(true))\r\n        dispatch(setAppStatus('succeeded'))\r\n    } catch (e: any) {\r\n        const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n        dispatch(setAppStatus('failed'))\r\n        dispatch(setAppError(error))\r\n        alert(error)\r\n    } finally {\r\n        dispatch(setRegistrationSuccess(false))\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch: AppDispatch) => {\r\n    try {\r\n        dispatch(setAppStatus('loading'))\r\n        await authAPI.logout()\r\n        dispatch(setUsersInfo(null))\r\n        dispatch(setIsLoggedIn(false))\r\n        dispatch(setAppStatus('succeeded'))\r\n    } catch (e: any) {\r\n        const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n        dispatch(setAppStatus('failed'))\r\n        dispatch(setAppError(error))\r\n    }\r\n}\r\n\r\nexport const checkAuth = () => async (dispatch: AppDispatch) => {\r\n    try {\r\n        dispatch(setAppStatus('loading'))\r\n        const response = await authAPI.checkAuth()\r\n        dispatch(setUsersInfo(response.data))\r\n        dispatch(setIsLoggedIn(true))\r\n        dispatch(setAppStatus('succeeded'))\r\n    } catch (e: any) {\r\n        const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n        dispatch(setAppStatus('failed'))\r\n        dispatch(setAppError(error))\r\n    } finally {\r\n        dispatch(setAppInitialized(true))\r\n    }\r\n}\r\n\r\nexport const changeUsersInfo = (info: ChangeUsersInfoPayload) => async (dispatch: AppDispatch) => {\r\n    try {\r\n        dispatch(setAppStatus('loading'))\r\n        const response = await authAPI.changeUsersInfo(info)\r\n        dispatch(setUsersInfo(response.data))\r\n        dispatch(setAppStatus('succeeded'))\r\n    } catch (e: any) {\r\n        const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n        dispatch(setAppStatus('failed'))\r\n        dispatch(setAppError(error))\r\n    }\r\n}\r\n\r\nexport const login = () => async (dispatch: AppDispatch) => {\r\n}\r\n\r\nexport const passwordRecovery = (email: string) => async (dispatch: AppDispatch) => {\r\n    const linkInRecoverEmailToLocal = `http://localhost:3000/cards-react/#${PATH.NEW_PASSWORD}/$token$`\r\n    const linkInRecoverEmailToGithubPages = `https://aportraitofjoyce.github.io/cards-react/#${PATH.NEW_PASSWORD}/$token$`\r\n    try {\r\n        const payload: ForgotRequestType = {\r\n            email,\r\n            from: 'test-front-admin,<sberBank_security@gmail.com>',\r\n            message: `<div style='background-color: lime; padding: 15px'>password recovery link: <a href='${linkInRecoverEmailToGithubPages}'>link</a></div>`\r\n        }\r\n        dispatch(setAppStatus('loading'))\r\n        await authAPI.passwordRecovery(payload)\r\n        dispatch(setEmailRecovery(email))\r\n        dispatch(setAppStatus('succeeded'))\r\n    } catch (e: any) {\r\n        const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n        dispatch(setAppStatus('failed'))\r\n        dispatch(setAppError(error))\r\n    }\r\n}\r\n\r\nexport const newPassword = (password: string, resetPasswordToken: string | undefined) => async (dispatch: AppDispatch) => {\r\n    try {\r\n        const response = await authAPI.newPassword({password, resetPasswordToken})\r\n        if (response.status === 200) alert('пароль изменён')\r\n    } catch (e: any) {\r\n        const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n        dispatch(setAppStatus('failed'))\r\n        dispatch(setAppError(error))\r\n    }\r\n}","import {FC} from 'react'\r\nimport {Profile} from '../pages/Profile/Profile'\r\nimport {Login} from '../pages/Login/Login'\r\nimport {Registration} from '../pages/Registration/Registration'\r\nimport {Error} from '../pages/Error/Error'\r\nimport {ForgotPassword} from '../pages/PasswordRecovery/ForgotPassword'\r\nimport {NewPassword} from '../pages/NewPassword/NewPassword'\r\nimport {CheckEmail} from '../pages/PasswordRecovery/CheckEmail/CheckEmail'\r\nimport {Home} from '../pages/Home/Home'\r\n\r\nexport enum PATH {\r\n    HOME = '/',\r\n    EMPTY = '',\r\n    ERROR = '/404',\r\n    PROFILE = '/profile',\r\n    LOGIN = '/login',\r\n    REGISTRATION = '/registration',\r\n    PASSWORD_RECOVERY = '/password-recovery',\r\n    NEW_PASSWORD = '/new-password',\r\n    CHECK_EMAIL = '/check-email',\r\n}\r\n\r\ntype Routes = {\r\n    path: string,\r\n    component: FC\r\n    exact?: boolean\r\n}\r\n\r\nexport const publicRoutes: Routes[] = [\r\n    {path: PATH.HOME, component: Home, exact: true},\r\n    {path: PATH.PROFILE, component: Profile},\r\n    {path: PATH.REGISTRATION, component: Registration},\r\n    {path: PATH.LOGIN, component: Login},\r\n    {path: PATH.PASSWORD_RECOVERY, component: ForgotPassword},\r\n    {path: PATH.NEW_PASSWORD, component: NewPassword},\r\n    {path: PATH.CHECK_EMAIL, component: CheckEmail},\r\n    {path: PATH.ERROR, component: Error},\r\n]","import {TypedUseSelectorHook, useSelector} from 'react-redux'\r\nimport {RootState} from '../store/store'\r\nimport {ChangeEvent, useEffect, useState} from 'react'\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector\r\n\r\nexport const useInput = (initialValue: string, validators: Validators) => {\r\n    const [value, setValue] = useState(initialValue)\r\n    const [touched, setTouched] = useState(false)\r\n    const validation = useValidation(value, validators)\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => setValue(e.currentTarget.value)\r\n    const onBlur = () => setTouched(true)\r\n\r\n    return {\r\n        value,\r\n        touched,\r\n        onChange,\r\n        onBlur,\r\n        validation\r\n    }\r\n}\r\n\r\ntype Validators = {\r\n    isRequired?: boolean\r\n    minLength?: number\r\n    maxLength?: number\r\n    isEmail?: boolean\r\n}\r\n\r\nexport const useValidation = (value: string, validators: Validators) => {\r\n    const [isValid, setIsValid] = useState(false)\r\n\r\n    const [isRequired, setIsRequired] = useState('')\r\n    const [isEmail, setIsEmail] = useState('')\r\n    const [minLength, setMinLength] = useState('')\r\n    const [maxLength, setMaxLength] = useState('')\r\n\r\n    useEffect(() => {\r\n        for (const validator in validators) {\r\n            switch (validator) {\r\n                case 'isRequired':\r\n                    !value\r\n                        ? setIsRequired('Field is required')\r\n                        : setIsRequired('')\r\n                    break\r\n\r\n                case 'minLength':\r\n                    value.length < validators[validator]!\r\n                        ? setMinLength(`Min length must be more than ${validators[validator]!}`)\r\n                        : setMinLength('')\r\n                    break\r\n\r\n                case 'maxLength':\r\n                    value.length > validators[validator]!\r\n                        ? setMaxLength(`Max length must be less than ${validators[validator]!}`)\r\n                        : setMaxLength('')\r\n                    break\r\n\r\n                case 'isEmail':\r\n                    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n                        .test(String(value).toLowerCase())\r\n                        ? setIsEmail('')\r\n                        : setIsEmail('Wrong email address')\r\n                    break\r\n\r\n            }\r\n        }\r\n    }, [value])\r\n\r\n    useEffect(() => {\r\n        (isRequired || isEmail || minLength || maxLength) ? setIsValid(false) : setIsValid(true)\r\n    }, [validators])\r\n\r\n    return {\r\n        isValid,\r\n        isRequired,\r\n        isEmail,\r\n        minLength,\r\n        maxLength\r\n    }\r\n}","import React, {ChangeEvent, DetailedHTMLProps, FC, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './Input.module.css'\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype InputTextProps = DefaultInputPropsType & {\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nexport const Input: FC<InputTextProps> = props => {\r\n    const {\r\n        type,\r\n        onChange,\r\n        onChangeText,\r\n        onKeyPress,\r\n        onEnter,\r\n        error,\r\n        className,\r\n        spanClassName,\r\n        ...restProps\r\n    } = props\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e)\r\n        onEnter && e.key === 'Enter' && onEnter()\r\n    }\r\n\r\n    const inputClassNames = `${error ? s.errorInput : ''}${className ? className : ''}`\r\n    const spanClassNames = `${s.error}${spanClassName ? spanClassName : ''}`\r\n\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <input type={type || 'text'}\r\n                   onChange={onChangeCallback}\r\n                   onKeyPress={onKeyPressCallback}\r\n                   className={inputClassNames}\r\n                   placeholder={'Введите текст...'}\r\n                   {...restProps}/>\r\n            {error && <span className={spanClassNames}>{error}</span>}\r\n        </div>\r\n    )\r\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps, FC} from 'react'\r\nimport s from './Button.module.css'\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype ButtonProps = DefaultButtonPropsType & {\r\n    secondary?: boolean\r\n    grouped?: boolean\r\n}\r\n\r\nexport const Button: FC<ButtonProps> = props => {\r\n    const {secondary, className, grouped, ...restProps} = props\r\n    const classNames = `${secondary ? s.secondary : ''}${grouped ? s.grouped : ''}${className ? className : ''}`\r\n\r\n    return <button className={classNames} {...restProps}/>\r\n}","import React, {ChangeEvent, DetailedHTMLProps, FC, InputHTMLAttributes} from 'react'\r\nimport s from './Checkbox.module.css'\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype CheckboxProps = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nexport const Checkbox: FC<CheckboxProps> = props => {\r\n    const {\r\n        type,\r\n        onChange,\r\n        onChangeChecked,\r\n        className,\r\n        spanClassName,\r\n        children,\r\n        ...restProps\r\n    } = props\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const classNames = `${s.checkbox}${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input type={'checkbox'}\r\n                   onChange={onChangeCallback}\r\n                   className={classNames}\r\n                   {...restProps}/>\r\n            {children && <span>{children}</span>}\r\n        </label>\r\n    )\r\n}","import {AxiosResponse} from \"axios\";\r\nimport {instance} from './axios-instance'\r\n\r\nexport type LoginRequestType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean\r\n}\r\n\r\nexport type LoginResponseType = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar: string;\r\n    publicCardPacksCount: number; // количество колод\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    error?: string;\r\n}\r\n\r\nexport const loginApi = {\r\n    login(email: string, password: string,\r\n          rememberMe: boolean) {\r\n        return instance.post<LoginRequestType, AxiosResponse<LoginResponseType>>(`/auth/login`, {\r\n            email,\r\n            password,\r\n            rememberMe\r\n        })\r\n    },\r\n}\r\n","import {ThunkDispatch} from \"redux-thunk\";\r\nimport {loginApi} from \"../../api/login-api\";\r\nimport {RootState} from \"../store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\n\r\ntype InitialStateType = {\r\n    name: string,\r\n    avatar: string,\r\n    publicCardPacksCount: number,\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    name: '',\r\n    avatar: '',\r\n    publicCardPacksCount: 0,\r\n}\r\n\r\n\r\nexport const loginReducer = (state = initialState, action: LoginActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                avatar: action.payload.avatar,\r\n                name: action.payload.name,\r\n                publicCardPacksCount: action.payload.publicCardPacksCount\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// ActionsTypes\r\n\r\nexport type LoginActionType =\r\n    ReturnType<typeof setUserData>\r\n\r\n// Actions\r\n\r\nexport const setUserData = (name: string, avatar: string, publicCardPacksCount: number) => {\r\n    return {type: SET_USER_DATA, payload: {name, avatar, publicCardPacksCount}} as const\r\n}\r\n\r\n//Thunk\r\n\r\n\r\nexport const userPostLogin = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch) => {\r\n    loginApi.login(email, password, rememberMe)\r\n        .then((res) => {\r\n            let {email, avatar, publicCardPacksCount} = res.data\r\n            dispatch(setUserData(email, avatar, publicCardPacksCount))\r\n        })\r\n        .catch((e: any) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log('Error:', {...e})\r\n        })\r\n        .finally()\r\n}","import React, {FC} from 'react'\r\n\r\nexport const Home: FC = () => {\r\n    return (\r\n        <div>\r\n            <h1>Home Page</h1>\r\n        </div>\r\n    )\r\n}","import React, {FC, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {RootState} from '../../store/store'\r\nimport {checkAuth} from '../../store/reducers/auth-reducer'\r\nimport {useTypedSelector} from '../../hooks/hooks'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {PATH} from '../../routes/routes'\r\n\r\nexport const Profile: FC = () => {\r\n    const {isLoggedIn} = useTypedSelector(state => state.auth)\r\n    const name = useSelector<RootState, string>(state => state.login.name)\r\n    const avatar = useSelector<RootState, string>(state => state.login.avatar)\r\n    const publicCardPacksCount = useSelector<RootState, number>(state => state.login.publicCardPacksCount)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(checkAuth())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div>\r\n            {!isLoggedIn && <Redirect to={PATH.LOGIN}/>}\r\n            <form>\r\n                <h1>Profile</h1>\r\n                <div>{name}</div>\r\n                <div>{avatar}</div>\r\n                <div>{publicCardPacksCount}</div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, {FC, FormEvent} from 'react'\r\nimport {Input} from '../../components/UI/Input/Input'\r\nimport {Button} from '../../components/UI/Button/Button'\r\nimport {useInput, useTypedSelector} from '../../hooks/hooks'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {PATH} from '../../routes/routes'\r\nimport {useDispatch} from 'react-redux'\r\nimport {registration} from '../../store/reducers/auth-reducer'\r\n\r\n\r\nexport const Registration: FC = () => {\r\n    const {registrationSuccess} = useTypedSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n\r\n    const email = useInput('', {isRequired: true, isEmail: true})\r\n    const password = useInput('', {minLength: 7, maxLength: 25})\r\n    const confirmPassword = useInput('', {minLength: 7, maxLength: 25})\r\n\r\n    const onSubmit = (e: FormEvent) => {\r\n        e.preventDefault()\r\n        dispatch(registration({email: email.value, password: password.value}))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {registrationSuccess && <Redirect to={PATH.LOGIN}/>}\r\n\r\n            <h1>Registration</h1>\r\n\r\n            <form onSubmit={onSubmit} style={{display: 'flex', flexDirection: 'column', gap: 24}}>\r\n                <label htmlFor={'registerEmail'}>Email</label>\r\n                <Input id={'registerEmail'}\r\n                       type={'email'}\r\n                       placeholder={'Enter you email address...'}\r\n                       {...email}/>\r\n\r\n                {(email.touched && email.validation) &&\r\n\t\t\t\t<span style={{color: 'red'}}>{email.validation.isRequired || email.validation.isEmail}</span>}\r\n\r\n                <label htmlFor={'registerPassword'}>Password</label>\r\n                <Input id={'registerPassword'}\r\n                       type={'text'}\r\n                       placeholder={'Enter your password...'}\r\n                       {...password}/>\r\n\r\n                {(password.touched && password.validation) &&\r\n\t\t\t\t<span style={{color: 'red'}}>{password.validation.minLength || password.validation.maxLength}</span>}\r\n\r\n\r\n                <label htmlFor={'registerConfirmPassword'}>Confirm Password</label>\r\n                <Input id={'registerConfirmPassword'}\r\n                       type={'text'}\r\n                       placeholder={'Confirm your password...'}\r\n                       {...confirmPassword}/>\r\n\r\n                {(confirmPassword.touched && confirmPassword.validation) &&\r\n\t\t\t\t<span\r\n\t\t\t\t\tstyle={{color: 'red'}}>{confirmPassword.validation.minLength || confirmPassword.validation.maxLength}</span>}\r\n\r\n                <Button type={'submit'}\r\n                        disabled={!email.validation.isValid || !password.validation.isValid || !confirmPassword.validation.isValid}>\r\n                    Register\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, {FC, useState} from 'react'\r\nimport {Input} from \"../../components/UI/Input/Input\";\r\nimport {Button} from \"../../components/UI/Button/Button\";\r\nimport {Checkbox} from \"../../components/UI/Checkbox/Checkbox\";\r\nimport {NavLink, useHistory} from \"react-router-dom\";\r\nimport {PATH} from '../../routes/routes';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {userPostLogin} from \"../../store/reducers/login-reducer\";\r\nimport {useTypedSelector} from \"../../hooks/hooks\";\r\n\r\nexport const Login: FC = () => {\r\n\r\n    const data = useTypedSelector(state => state.login)\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [remember, setRemember] = useState<boolean>(false)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n\r\n\r\n    const onSubmit = () => {\r\n            dispatch(userPostLogin(email, password, remember))\r\n            setEmail('')\r\n            setPassword('')\r\n            history.push(PATH.PROFILE)\r\n        console.log(data)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Sign In</h1>\r\n            <form onSubmit={onSubmit}>\r\n                <h1>{data.name}</h1>\r\n                <label htmlFor=\"loginEmail\">Email</label>\r\n                <Input\r\n                    id={'loginEmail'}\r\n                    type={\"email\"}\r\n                    placeholder={'Enter your email address'}\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.currentTarget.value)}\r\n                />\r\n                <label htmlFor=\"loginPassword\">Password</label>\r\n                <Input\r\n                    id={'loginPassword'}\r\n                    type={\"password\"}\r\n                    placeholder={'Enter your password'}\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.currentTarget.value)}\r\n                />\r\n                <NavLink to={PATH.PASSWORD_RECOVERY}>\r\n                    <h4>Forgot Password</h4>\r\n                </NavLink>\r\n                <Checkbox\r\n                    // value={remember}\r\n                    checked={remember}\r\n                    onChange={(e) => setRemember(e.currentTarget.checked)}\r\n                >Remember me</Checkbox>\r\n                <Button type={\"submit\"}>Login</Button>\r\n                <div>\r\n                    <p>Don’t have an account?</p>\r\n                    <NavLink to={PATH.REGISTRATION}>\r\n                        <h4>Sign Up</h4>\r\n                    </NavLink>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, {FC, useState} from 'react'\r\nimport {Button} from '../../components/UI/Button/Button'\r\nimport {Input} from '../../components/UI/Input/Input'\r\nimport {useDispatch} from 'react-redux'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {PATH} from '../../routes/routes'\r\nimport {passwordRecovery} from '../../store/reducers/auth-reducer'\r\n\r\n\r\nexport const ForgotPassword: FC = () => {\r\n    const [email, setEmail] = useState<string>('');\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n\r\n    const onsubmit = () => {\r\n        if (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) { //валидация email\r\n            alert('письмо отправлено на почту')\r\n            dispatch(passwordRecovery(email))\r\n            history.push(PATH.CHECK_EMAIL)\r\n        } else {\r\n            alert('email is not valid')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={onsubmit}>\r\n                <h1>IT-incubator</h1>\r\n                <h2>Forgot your password?</h2>\r\n                <Input\r\n                    type={'email'}\r\n                    placeholder={'enter your email'}\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.currentTarget.value)}\r\n                />\r\n                <span>Enter your address and we will send you further instructions</span>\r\n                <div>\r\n                    <Button>Send instructions</Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, {FC, FormEvent, useState} from 'react'\r\nimport s from './NewPassword.module.css'\r\nimport {Button} from '../../components/UI/Button/Button'\r\nimport {Input} from '../../components/UI/Input/Input'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {useDispatch} from 'react-redux'\r\nimport {newPassword} from '../../store/reducers/auth-reducer'\r\n\r\n\r\n//TODO сервер ограничивает максимальное кол-во символов пароля. доделать валидацию кол-ва символов с фронта и (или) ловить ошибку с бэка\r\n\r\nexport const NewPassword: FC = () => {\r\n    const dispatch = useDispatch()\r\n    const {token} = useParams<{ token: string | undefined }>()\r\n    const history = useHistory()\r\n\r\n\r\n    const [firstPass, setFirstPass] = useState<string>('') // первый инпут\r\n    const [secondPass, setSecondPass] = useState<string>('')// второй инпут\r\n\r\n\r\n    const onSubmit = (e: FormEvent) => {\r\n        e.preventDefault()\r\n        const passIdentical = firstPass === secondPass //данные обоих инпутов должны быть равно\r\n        if (!passIdentical) { // если данные разные\r\n            alert('пароли не совпадают')\r\n        } else { // если совпадают\r\n            alert('пароли совпадают')\r\n            dispatch(newPassword(firstPass, token))\r\n        }\r\n        setFirstPass('') // обнуление инпутов\r\n        setSecondPass('')\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.container}>\r\n                <form className={s.form} onSubmit={onSubmit}>\r\n                    <h1>IT-incubator</h1>\r\n                    <h2>Create new password</h2>\r\n\r\n                    <label htmlFor='inputNewPassword'>NewPassword</label>\r\n                    <Input\r\n                        id={'inputNewPassword'}\r\n                        type={'text'}\r\n                        onChange={(e) => setFirstPass(e.currentTarget.value)}\r\n                        value={firstPass}\r\n                        placeholder={'New password'}\r\n                    />\r\n\r\n                    <label htmlFor='RepeatNewPassword'>RepeatNewPassword</label>\r\n                    <Input\r\n                        id={'RepeatNewPassword'}\r\n                        type={'text'}\r\n                        onChange={(e) => setSecondPass(e.currentTarget.value)}\r\n                        value={secondPass}\r\n                        placeholder={'Repeat new password'}\r\n                    />\r\n\r\n                    <h3>Create new password and will send you further instructions to email</h3>\r\n\r\n                    <Button type={'submit'}>Create new password</Button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport s from './CheckEmail.module.css'\r\nimport {PATH} from '../../../routes/routes'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useTypedSelector} from '../../../hooks/hooks'\r\n\r\nexport const CheckEmail = () => {\r\n    const email = useTypedSelector(state => state.auth.recoveryEmail)\r\n    const history = useHistory()\r\n\r\n    setTimeout(() => {\r\n        history.push(PATH.LOGIN)\r\n    }, 3000)\r\n\r\n    return (\r\n        <div className={s.checkEmail}>\r\n            <div className={s.container}>\r\n                <h1>IT-incubator</h1>\r\n                <div className={s.icon}><img src='https://su-19.ru/wp-content/uploads/2020/12/mail_ico.png'\r\n                                             alt='iconMail'/></div>\r\n\r\n                <h3>We've sent an Email with instructions to {email}</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {FC} from 'react'\r\n\r\nexport const Error: FC = () => {\r\n    return (\r\n        <div>\r\n            <h1>Error 404</h1>\r\n        </div>\r\n    )\r\n}","import React, {FC} from 'react'\r\nimport s from './Progress.module.css'\r\n\r\nexport const Progress: FC = () => {\r\n    return (\r\n        <div>\r\n            <div className={s.progressContainer}>\r\n                <div className={s.progressBar}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {FC, useEffect} from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport {PATH, publicRoutes} from '../routes/routes'\r\nimport {useTypedSelector} from '../hooks/hooks'\r\nimport {Progress} from '../components/UI/Progress/Progress'\r\nimport {useDispatch} from 'react-redux'\r\nimport {checkAuth} from '../store/reducers/auth-reducer'\r\n\r\nexport const AppRouter: FC = () => {\r\n    const {status, isInitialized} = useTypedSelector(state => state.app)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(checkAuth())\r\n    }, [])\r\n\r\n    if (!isInitialized) return <Progress/>\r\n\r\n    return (\r\n        <>\r\n            {status === 'loading' && <Progress/>}\r\n            <Switch>\r\n                {publicRoutes.map(r => <Route key={r.path} path={r.path} component={r.component} exact={r.exact}/>)}\r\n                <Redirect from={PATH.EMPTY} to={PATH.ERROR}/>\r\n            </Switch>\r\n        </>\r\n    )\r\n}","import React, {FC} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {PATH} from '../../routes/routes'\r\nimport s from './Header.module.css'\r\nimport {useDispatch} from 'react-redux'\r\nimport {logout} from '../../store/reducers/auth-reducer'\r\n\r\nexport const Header: FC = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <nav className={s.container}>\r\n                <NavLink activeClassName={s.active} to={PATH.HOME} exact>Home</NavLink>\r\n                <NavLink activeClassName={s.active} to={PATH.PROFILE} style={{marginRight: 64}}>Profile</NavLink>\r\n                <NavLink activeClassName={s.active} to={PATH.REGISTRATION}>Registration</NavLink>\r\n                <NavLink activeClassName={s.active} to={PATH.LOGIN}>Login</NavLink>\r\n                <NavLink activeClassName={s.active} to={PATH.PASSWORD_RECOVERY}>Password Recovery</NavLink>\r\n                <NavLink activeClassName={s.active} to={PATH.CHECK_EMAIL}>Check email</NavLink>\r\n                <NavLink activeClassName={s.active} to={PATH.NEW_PASSWORD}>New Password</NavLink>\r\n                <span onClick={logoutHandler}>Logout</span>\r\n            </nav>\r\n        </div>\r\n    )\r\n}","const initialState = {}\r\n\r\nexport const profileReducer = (state = initialState, action: any): typeof initialState => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {profileReducer} from './reducers/profile-reducer'\r\nimport {authReducer} from './reducers/auth-reducer'\r\nimport {appReducer} from './reducers/app-reducer'\r\nimport {loginReducer} from './reducers/login-reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    auth: authReducer,\r\n    profile: profileReducer,\r\n\r\n    login: loginReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React, {FC} from 'react'\r\nimport {AppRouter} from './AppRouter'\r\nimport {HashRouter} from 'react-router-dom'\r\nimport {Header} from '../components/Header/Header'\r\nimport {Provider} from 'react-redux'\r\nimport {store} from '../store/store'\r\n\r\nexport const App: FC = () => {\r\n    return (\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <Header/>\r\n                <AppRouter/>\r\n            </Provider>\r\n        </HashRouter>\r\n    )\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport {App} from './app/App'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n                <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}